GAS LISTING /tmp/ccGIF4s8.s 			page 1


   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.stabs	"/home/maksim/Work/Grasshopper/massive-octo-bear/micro_controller/",100,0,2,.Ltext0
   9               		.stabs	"main.c",100,0,2,.Ltext0
  10               		.text
  11               	.Ltext0:
  12               		.stabs	"gcc2_compiled.",60,0,0,0
  13               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  14               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  15               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  16               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  17               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  18               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  19               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  21               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  22               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  23               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  24               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  27               		.stabs	"void:t(0,15)=(0,15)",128,0,0,0
  28               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/string.h",130,0,0,0
  29               		.stabs	"/usr/lib/gcc/avr/4.5.3/include/stddef.h",130,0,0,0
  30               		.stabs	"size_t:t(2,1)=(0,4)",128,0,211,0
  31               		.stabn	162,0,0,0
  32               		.stabn	162,0,0,0
  33               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/stdlib.h",130,0,0,0
  34               		.stabs	"/usr/lib/gcc/avr/4.5.3/include/stddef.h",130,0,0,0
  35               		.stabs	"wchar_t:t(4,1)=(0,1)",128,0,323,0
  36               		.stabn	162,0,0,0
  37               		.stabs	"div_t:t(3,1)=(3,2)=s4quot:(0,1),0,16;rem:(0,1),16,16;;",128,0,71,0
  38               		.stabs	"ldiv_t:t(3,3)=(3,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,77,0
  39               		.stabs	"__compar_fn_t:t(3,5)=(3,6)=*(3,7)=f(0,1)",128,0,80,0
  40               		.stabn	162,0,0,0
  41               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h",130,0,0,0
  42               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  43               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/inttypes.h",130,0,0,0
  44               		.stabs	"/usr/lib/gcc/avr/4.5.3/include/stdint.h",130,0,0,0
  45               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/stdint.h",130,0,0,0
  46               		.stabs	"int8_t:t(9,1)=(0,10)",128,0,121,0
  47               		.stabs	"uint8_t:t(9,2)=(0,11)",128,0,122,0
  48               		.stabs	"int16_t:t(9,3)=(0,1)",128,0,123,0
  49               		.stabs	"uint16_t:t(9,4)=(0,4)",128,0,124,0
  50               		.stabs	"int32_t:t(9,5)=(0,3)",128,0,125,0
  51               		.stabs	"uint32_t:t(9,6)=(0,5)",128,0,126,0
  52               		.stabs	"int64_t:t(9,7)=(0,6)",128,0,128,0
  53               		.stabs	"uint64_t:t(9,8)=(0,7)",128,0,129,0
  54               		.stabs	"intptr_t:t(9,9)=(9,3)",128,0,142,0
  55               		.stabs	"uintptr_t:t(9,10)=(9,4)",128,0,147,0
  56               		.stabs	"int_least8_t:t(9,11)=(9,1)",128,0,159,0
  57               		.stabs	"uint_least8_t:t(9,12)=(9,2)",128,0,164,0
GAS LISTING /tmp/ccGIF4s8.s 			page 2


  58               		.stabs	"int_least16_t:t(9,13)=(9,3)",128,0,169,0
  59               		.stabs	"uint_least16_t:t(9,14)=(9,4)",128,0,174,0
  60               		.stabs	"int_least32_t:t(9,15)=(9,5)",128,0,179,0
  61               		.stabs	"uint_least32_t:t(9,16)=(9,6)",128,0,184,0
  62               		.stabs	"int_least64_t:t(9,17)=(9,7)",128,0,192,0
  63               		.stabs	"uint_least64_t:t(9,18)=(9,8)",128,0,199,0
  64               		.stabs	"int_fast8_t:t(9,19)=(9,1)",128,0,213,0
  65               		.stabs	"uint_fast8_t:t(9,20)=(9,2)",128,0,218,0
  66               		.stabs	"int_fast16_t:t(9,21)=(9,3)",128,0,223,0
  67               		.stabs	"uint_fast16_t:t(9,22)=(9,4)",128,0,228,0
  68               		.stabs	"int_fast32_t:t(9,23)=(9,5)",128,0,233,0
  69               		.stabs	"uint_fast32_t:t(9,24)=(9,6)",128,0,238,0
  70               		.stabs	"int_fast64_t:t(9,25)=(9,7)",128,0,246,0
  71               		.stabs	"uint_fast64_t:t(9,26)=(9,8)",128,0,253,0
  72               		.stabs	"intmax_t:t(9,27)=(9,7)",128,0,273,0
  73               		.stabs	"uintmax_t:t(9,28)=(9,8)",128,0,278,0
  74               		.stabn	162,0,0,0
  75               		.stabn	162,0,0,0
  76               		.stabs	"int_farptr_t:t(7,1)=(9,5)",128,0,77,0
  77               		.stabs	"uint_farptr_t:t(7,2)=(9,6)",128,0,81,0
  78               		.stabn	162,0,0,0
  79               		.stabn	162,0,0,0
  80               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/fuse.h",130,0,0,0
  81               		.stabs	"__fuse_t:t(10,1)=(10,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244
  82               		.stabn	162,0,0,0
  83               		.stabn	162,0,0,0
  84               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h",130,0,0,0
  85               		.stabs	" :T(11,1)=@s8;eclock_div_1:0,clock_div_2:1,clock_div_4:2,clock_div_8:3,clock_div_16:4,cloc
  86               		.stabs	"clock_div_t:t(11,2)=(11,1)",128,0,1475,0
  87               		.stabn	162,0,0,0
  88               		.stabs	"a_set_input:F(0,15)",36,0,114,a_set_input
  89               		.stabs	"pin:P(9,2)",64,0,114,24
  90               	.global	a_set_input
  91               		.type	a_set_input, @function
  92               	a_set_input:
  93               		.stabd	46,0,0
   1:main.c        **** #define F_CPU 1600000 // Clock speed
   2:main.c        **** #define BAUD 19200
   3:main.c        **** 
   4:main.c        **** /* Some macros */
   5:main.c        **** 
   6:main.c        **** /* ADC PD */
   7:main.c        **** #define PD PC0
   8:main.c        **** /* ADC RD */
   9:main.c        **** #define RD PC1
  10:main.c        **** /* ADC CS */
  11:main.c        **** #define CS PC2
  12:main.c        **** /* ADC CONVST */
  13:main.c        **** #define CONVST PC3
  14:main.c        **** /* ADC interrupt */
  15:main.c        **** #define ADC_INTERRUPT_PIN PD2
  16:main.c        **** #define ADC_INTERRUPT_INT_VECTOR INT0_vect
  17:main.c        **** 
  18:main.c        **** /* Bluetooth control */
  19:main.c        **** #define BLUETOOTH_RTS_PIN PD3
  20:main.c        **** #define BLUETOOTH_CTS_PIN PD4
  21:main.c        **** #define BLUETOOTH_RTS_INTERRUPT_VECTOR INT1_vect
GAS LISTING /tmp/ccGIF4s8.s 			page 3


  22:main.c        **** 
  23:main.c        **** /* DEBUG */
  24:main.c        **** #define DEBUG_OUTPUT_PIN PB0
  25:main.c        **** #define DEBUG_INTERRUPT_PIN PB1
  26:main.c        **** #define DEBUG_DATA_PIN PB4
  27:main.c        **** 
  28:main.c        **** #define output_low(port,pin) port &= ~(1<<pin)
  29:main.c        **** #define output_high(port,pin) port |= (1<<pin)
  30:main.c        **** #define set_input(portdir,pin) portdir &= ~(1<<pin)
  31:main.c        **** #define set_output(portdir,pin) portdir |= (1<<pin)
  32:main.c        **** 
  33:main.c        **** #define bit_get(p,m) ((p) & (m))
  34:main.c        **** #define bit_set(p,m) ((p) |= (m))
  35:main.c        **** #define bit_clear(p,m) ((p) &= ~(m))
  36:main.c        **** #define bit_flip(p,m) ((p) ^= (m))
  37:main.c        **** #define bit_write(c,p,m) (c ? bit_set(p,m) : bit_clear(p,m))
  38:main.c        **** #define BIT(x) (0x01 << (x))
  39:main.c        **** 
  40:main.c        **** /* Configuration matters */
  41:main.c        **** #define buffer_length 25
  42:main.c        **** 
  43:main.c        **** #include <string.h>
  44:main.c        **** #include <stdlib.h>
  45:main.c        **** #include <avr/io.h>
  46:main.c        **** #include <avr/interrupt.h>
  47:main.c        **** #include <avr/sfr_defs.h>
  48:main.c        **** #include <avr/power.h>
  49:main.c        **** 
  50:main.c        **** int main( void );
  51:main.c        **** 
  52:main.c        **** void clock_scale_change( void );
  53:main.c        **** 
  54:main.c        **** /* USART Bluetooth initialization */
  55:main.c        **** void USART_bluetooth_init( void );
  56:main.c        **** /* USART Bluetooth send */
  57:main.c        **** void USART_bluetooth_send( unsigned char );
  58:main.c        **** void USART_bluetooth_send_message( char* );
  59:main.c        **** /* USART Bluetooth receive */
  60:main.c        **** void USART_bluetooth_recv( unsigned char );
  61:main.c        **** /* USART bluetooth check */
  62:main.c        **** void USART_bluetooth_check_alive( void );
  63:main.c        **** void USART_bluetooth_check_echo( void );
  64:main.c        **** void USART_bluetooth_check_discover( void );
  65:main.c        **** 
  66:main.c        **** /* USART debug initialization */
  67:main.c        **** void USART_debug_init( void );
  68:main.c        **** /* USART debug send */
  69:main.c        **** void USART_debug_send( unsigned char );
  70:main.c        **** /* USART debug send a buffer */
  71:main.c        **** void USART_debug_send_message( char * );
  72:main.c        **** /* USART debug receive */
  73:main.c        **** void USART_debug_recv( unsigned char );
  74:main.c        **** 
  75:main.c        **** /* External ADC part */
  76:main.c        **** 
  77:main.c        **** /* The interrupt initiative part */
  78:main.c        **** void ADC_Init( void );
GAS LISTING /tmp/ccGIF4s8.s 			page 4


  79:main.c        **** /* Make start of the conversion */
  80:main.c        **** void ADC_start( void );
  81:main.c        **** /* Read the information from the ADC */
  82:main.c        **** void ADC_read( void );
  83:main.c        **** /* Stop reading the information from ADC */
  84:main.c        **** void ADC_stop( void );
  85:main.c        **** 
  86:main.c        **** /* DELAY */
  87:main.c        **** void delay_ms( uint8_t );
  88:main.c        **** /* Debug matters */
  89:main.c        **** void debug_init( void );
  90:main.c        **** void debug_click( void );
  91:main.c        **** void debug_interrupt( void );
  92:main.c        **** void debug_data( uint8_t );
  93:main.c        **** 
  94:main.c        **** void a_set_input( uint8_t );
  95:main.c        **** void a_set_output( uint8_t );
  96:main.c        **** void a_output_low( uint8_t );
  97:main.c        **** void a_output_high( uint8_t );
  98:main.c        **** 
  99:main.c        **** void b_set_input( uint8_t );
 100:main.c        **** void b_set_output( uint8_t );
 101:main.c        **** void b_output_low( uint8_t );
 102:main.c        **** void b_output_high( uint8_t );
 103:main.c        **** 
 104:main.c        **** void c_set_input( uint8_t );
 105:main.c        **** void c_set_output( uint8_t );
 106:main.c        **** void c_output_low( uint8_t );
 107:main.c        **** void c_output_high( uint8_t );
 108:main.c        **** 
 109:main.c        **** void d_set_input( uint8_t );
 110:main.c        **** void d_set_output( uint8_t );
 111:main.c        **** void d_output_low( uint8_t );
 112:main.c        **** void d_output_high( uint8_t );
 113:main.c        **** 
 114:main.c        **** void a_set_input( uint8_t pin ) { set_input( DDRA, pin ); }
  94               		.stabn	68,0,114,.LM0-.LFBB1
  95               	.LM0:
  96               	.LFBB1:
  97               	/* prologue: function */
  98               	/* frame size = 0 */
  99               	/* stack size = 0 */
 100               	.L__stack_usage = 0
 101               		.stabn	68,0,114,.LM1-.LFBB1
 102               	.LM1:
 103 0000 9AB3      		in r25,58-32
 104 0002 21E0      		ldi r18,lo8(1)
 105 0004 30E0      		ldi r19,hi8(1)
 106 0006 00C0      		rjmp 2f
 107 0008 220F      	1:	lsl r18
 108 000a 331F      		rol r19
 109 000c 8A95      	2:	dec r24
 110 000e 02F4      		brpl 1b
 111 0010 2095      		com r18
 112 0012 2923      		and r18,r25
 113 0014 2ABB      		out 58-32,r18
 114               	/* epilogue start */
GAS LISTING /tmp/ccGIF4s8.s 			page 5


 115 0016 0895      		ret
 116               		.size	a_set_input, .-a_set_input
 117               	.Lscope1:
 118               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 119               		.stabd	78,0,0
 120               		.stabs	"a_set_output:F(0,15)",36,0,115,a_set_output
 121               		.stabs	"pin:P(9,2)",64,0,115,24
 122               	.global	a_set_output
 123               		.type	a_set_output, @function
 124               	a_set_output:
 125               		.stabd	46,0,0
 115:main.c        **** void a_set_output( uint8_t pin ) { set_output( DDRA, pin ); }
 126               		.stabn	68,0,115,.LM2-.LFBB2
 127               	.LM2:
 128               	.LFBB2:
 129               	/* prologue: function */
 130               	/* frame size = 0 */
 131               	/* stack size = 0 */
 132               	.L__stack_usage = 0
 133               		.stabn	68,0,115,.LM3-.LFBB2
 134               	.LM3:
 135 0018 9AB3      		in r25,58-32
 136 001a 21E0      		ldi r18,lo8(1)
 137 001c 30E0      		ldi r19,hi8(1)
 138 001e 00C0      		rjmp 2f
 139 0020 220F      	1:	lsl r18
 140 0022 331F      		rol r19
 141 0024 8A95      	2:	dec r24
 142 0026 02F4      		brpl 1b
 143 0028 922B      		or r25,r18
 144 002a 9ABB      		out 58-32,r25
 145               	/* epilogue start */
 146 002c 0895      		ret
 147               		.size	a_set_output, .-a_set_output
 148               	.Lscope2:
 149               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 150               		.stabd	78,0,0
 151               		.stabs	"a_output_low:F(0,15)",36,0,116,a_output_low
 152               		.stabs	"pin:P(9,2)",64,0,116,24
 153               	.global	a_output_low
 154               		.type	a_output_low, @function
 155               	a_output_low:
 156               		.stabd	46,0,0
 116:main.c        **** void a_output_low( uint8_t pin ) { output_low( PORTA, pin ); }
 157               		.stabn	68,0,116,.LM4-.LFBB3
 158               	.LM4:
 159               	.LFBB3:
 160               	/* prologue: function */
 161               	/* frame size = 0 */
 162               	/* stack size = 0 */
 163               	.L__stack_usage = 0
 164               		.stabn	68,0,116,.LM5-.LFBB3
 165               	.LM5:
 166 002e 9BB3      		in r25,59-32
 167 0030 21E0      		ldi r18,lo8(1)
 168 0032 30E0      		ldi r19,hi8(1)
 169 0034 00C0      		rjmp 2f
GAS LISTING /tmp/ccGIF4s8.s 			page 6


 170 0036 220F      	1:	lsl r18
 171 0038 331F      		rol r19
 172 003a 8A95      	2:	dec r24
 173 003c 02F4      		brpl 1b
 174 003e 2095      		com r18
 175 0040 2923      		and r18,r25
 176 0042 2BBB      		out 59-32,r18
 177               	/* epilogue start */
 178 0044 0895      		ret
 179               		.size	a_output_low, .-a_output_low
 180               	.Lscope3:
 181               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 182               		.stabd	78,0,0
 183               		.stabs	"a_output_high:F(0,15)",36,0,117,a_output_high
 184               		.stabs	"pin:P(9,2)",64,0,117,24
 185               	.global	a_output_high
 186               		.type	a_output_high, @function
 187               	a_output_high:
 188               		.stabd	46,0,0
 117:main.c        **** void a_output_high( uint8_t pin ) { output_high( PORTA, pin ); }
 189               		.stabn	68,0,117,.LM6-.LFBB4
 190               	.LM6:
 191               	.LFBB4:
 192               	/* prologue: function */
 193               	/* frame size = 0 */
 194               	/* stack size = 0 */
 195               	.L__stack_usage = 0
 196               		.stabn	68,0,117,.LM7-.LFBB4
 197               	.LM7:
 198 0046 9BB3      		in r25,59-32
 199 0048 21E0      		ldi r18,lo8(1)
 200 004a 30E0      		ldi r19,hi8(1)
 201 004c 00C0      		rjmp 2f
 202 004e 220F      	1:	lsl r18
 203 0050 331F      		rol r19
 204 0052 8A95      	2:	dec r24
 205 0054 02F4      		brpl 1b
 206 0056 922B      		or r25,r18
 207 0058 9BBB      		out 59-32,r25
 208               	/* epilogue start */
 209 005a 0895      		ret
 210               		.size	a_output_high, .-a_output_high
 211               	.Lscope4:
 212               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 213               		.stabd	78,0,0
 214               		.stabs	"b_set_input:F(0,15)",36,0,119,b_set_input
 215               		.stabs	"pin:P(9,2)",64,0,119,24
 216               	.global	b_set_input
 217               		.type	b_set_input, @function
 218               	b_set_input:
 219               		.stabd	46,0,0
 118:main.c        **** 
 119:main.c        **** void b_set_input( uint8_t pin ) { set_input( DDRB, pin ); }
 220               		.stabn	68,0,119,.LM8-.LFBB5
 221               	.LM8:
 222               	.LFBB5:
 223               	/* prologue: function */
GAS LISTING /tmp/ccGIF4s8.s 			page 7


 224               	/* frame size = 0 */
 225               	/* stack size = 0 */
 226               	.L__stack_usage = 0
 227               		.stabn	68,0,119,.LM9-.LFBB5
 228               	.LM9:
 229 005c 97B3      		in r25,55-32
 230 005e 21E0      		ldi r18,lo8(1)
 231 0060 30E0      		ldi r19,hi8(1)
 232 0062 00C0      		rjmp 2f
 233 0064 220F      	1:	lsl r18
 234 0066 331F      		rol r19
 235 0068 8A95      	2:	dec r24
 236 006a 02F4      		brpl 1b
 237 006c 2095      		com r18
 238 006e 2923      		and r18,r25
 239 0070 27BB      		out 55-32,r18
 240               	/* epilogue start */
 241 0072 0895      		ret
 242               		.size	b_set_input, .-b_set_input
 243               	.Lscope5:
 244               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 245               		.stabd	78,0,0
 246               		.stabs	"b_set_output:F(0,15)",36,0,120,b_set_output
 247               		.stabs	"pin:P(9,2)",64,0,120,24
 248               	.global	b_set_output
 249               		.type	b_set_output, @function
 250               	b_set_output:
 251               		.stabd	46,0,0
 120:main.c        **** void b_set_output( uint8_t pin ) { set_output( DDRB, pin ); }
 252               		.stabn	68,0,120,.LM10-.LFBB6
 253               	.LM10:
 254               	.LFBB6:
 255               	/* prologue: function */
 256               	/* frame size = 0 */
 257               	/* stack size = 0 */
 258               	.L__stack_usage = 0
 259               		.stabn	68,0,120,.LM11-.LFBB6
 260               	.LM11:
 261 0074 97B3      		in r25,55-32
 262 0076 21E0      		ldi r18,lo8(1)
 263 0078 30E0      		ldi r19,hi8(1)
 264 007a 00C0      		rjmp 2f
 265 007c 220F      	1:	lsl r18
 266 007e 331F      		rol r19
 267 0080 8A95      	2:	dec r24
 268 0082 02F4      		brpl 1b
 269 0084 922B      		or r25,r18
 270 0086 97BB      		out 55-32,r25
 271               	/* epilogue start */
 272 0088 0895      		ret
 273               		.size	b_set_output, .-b_set_output
 274               	.Lscope6:
 275               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 276               		.stabd	78,0,0
 277               		.stabs	"b_output_low:F(0,15)",36,0,121,b_output_low
 278               		.stabs	"pin:P(9,2)",64,0,121,24
 279               	.global	b_output_low
GAS LISTING /tmp/ccGIF4s8.s 			page 8


 280               		.type	b_output_low, @function
 281               	b_output_low:
 282               		.stabd	46,0,0
 121:main.c        **** void b_output_low( uint8_t pin ) { output_low( PORTB, pin ); }
 283               		.stabn	68,0,121,.LM12-.LFBB7
 284               	.LM12:
 285               	.LFBB7:
 286               	/* prologue: function */
 287               	/* frame size = 0 */
 288               	/* stack size = 0 */
 289               	.L__stack_usage = 0
 290               		.stabn	68,0,121,.LM13-.LFBB7
 291               	.LM13:
 292 008a 98B3      		in r25,56-32
 293 008c 21E0      		ldi r18,lo8(1)
 294 008e 30E0      		ldi r19,hi8(1)
 295 0090 00C0      		rjmp 2f
 296 0092 220F      	1:	lsl r18
 297 0094 331F      		rol r19
 298 0096 8A95      	2:	dec r24
 299 0098 02F4      		brpl 1b
 300 009a 2095      		com r18
 301 009c 2923      		and r18,r25
 302 009e 28BB      		out 56-32,r18
 303               	/* epilogue start */
 304 00a0 0895      		ret
 305               		.size	b_output_low, .-b_output_low
 306               	.Lscope7:
 307               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 308               		.stabd	78,0,0
 309               		.stabs	"b_output_high:F(0,15)",36,0,122,b_output_high
 310               		.stabs	"pin:P(9,2)",64,0,122,24
 311               	.global	b_output_high
 312               		.type	b_output_high, @function
 313               	b_output_high:
 314               		.stabd	46,0,0
 122:main.c        **** void b_output_high( uint8_t pin ) { output_high( PORTB, pin ); }
 315               		.stabn	68,0,122,.LM14-.LFBB8
 316               	.LM14:
 317               	.LFBB8:
 318               	/* prologue: function */
 319               	/* frame size = 0 */
 320               	/* stack size = 0 */
 321               	.L__stack_usage = 0
 322               		.stabn	68,0,122,.LM15-.LFBB8
 323               	.LM15:
 324 00a2 98B3      		in r25,56-32
 325 00a4 21E0      		ldi r18,lo8(1)
 326 00a6 30E0      		ldi r19,hi8(1)
 327 00a8 00C0      		rjmp 2f
 328 00aa 220F      	1:	lsl r18
 329 00ac 331F      		rol r19
 330 00ae 8A95      	2:	dec r24
 331 00b0 02F4      		brpl 1b
 332 00b2 922B      		or r25,r18
 333 00b4 98BB      		out 56-32,r25
 334               	/* epilogue start */
GAS LISTING /tmp/ccGIF4s8.s 			page 9


 335 00b6 0895      		ret
 336               		.size	b_output_high, .-b_output_high
 337               	.Lscope8:
 338               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 339               		.stabd	78,0,0
 340               		.stabs	"c_set_input:F(0,15)",36,0,124,c_set_input
 341               		.stabs	"pin:P(9,2)",64,0,124,24
 342               	.global	c_set_input
 343               		.type	c_set_input, @function
 344               	c_set_input:
 345               		.stabd	46,0,0
 123:main.c        **** 
 124:main.c        **** void c_set_input( uint8_t pin ) { set_input( DDRC, pin ); }
 346               		.stabn	68,0,124,.LM16-.LFBB9
 347               	.LM16:
 348               	.LFBB9:
 349               	/* prologue: function */
 350               	/* frame size = 0 */
 351               	/* stack size = 0 */
 352               	.L__stack_usage = 0
 353               		.stabn	68,0,124,.LM17-.LFBB9
 354               	.LM17:
 355 00b8 94B3      		in r25,52-32
 356 00ba 21E0      		ldi r18,lo8(1)
 357 00bc 30E0      		ldi r19,hi8(1)
 358 00be 00C0      		rjmp 2f
 359 00c0 220F      	1:	lsl r18
 360 00c2 331F      		rol r19
 361 00c4 8A95      	2:	dec r24
 362 00c6 02F4      		brpl 1b
 363 00c8 2095      		com r18
 364 00ca 2923      		and r18,r25
 365 00cc 24BB      		out 52-32,r18
 366               	/* epilogue start */
 367 00ce 0895      		ret
 368               		.size	c_set_input, .-c_set_input
 369               	.Lscope9:
 370               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 371               		.stabd	78,0,0
 372               		.stabs	"c_set_output:F(0,15)",36,0,125,c_set_output
 373               		.stabs	"pin:P(9,2)",64,0,125,24
 374               	.global	c_set_output
 375               		.type	c_set_output, @function
 376               	c_set_output:
 377               		.stabd	46,0,0
 125:main.c        **** void c_set_output( uint8_t pin ) { set_output( DDRC, pin ); }
 378               		.stabn	68,0,125,.LM18-.LFBB10
 379               	.LM18:
 380               	.LFBB10:
 381               	/* prologue: function */
 382               	/* frame size = 0 */
 383               	/* stack size = 0 */
 384               	.L__stack_usage = 0
 385               		.stabn	68,0,125,.LM19-.LFBB10
 386               	.LM19:
 387 00d0 94B3      		in r25,52-32
 388 00d2 21E0      		ldi r18,lo8(1)
GAS LISTING /tmp/ccGIF4s8.s 			page 10


 389 00d4 30E0      		ldi r19,hi8(1)
 390 00d6 00C0      		rjmp 2f
 391 00d8 220F      	1:	lsl r18
 392 00da 331F      		rol r19
 393 00dc 8A95      	2:	dec r24
 394 00de 02F4      		brpl 1b
 395 00e0 922B      		or r25,r18
 396 00e2 94BB      		out 52-32,r25
 397               	/* epilogue start */
 398 00e4 0895      		ret
 399               		.size	c_set_output, .-c_set_output
 400               	.Lscope10:
 401               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 402               		.stabd	78,0,0
 403               		.stabs	"c_output_low:F(0,15)",36,0,126,c_output_low
 404               		.stabs	"pin:P(9,2)",64,0,126,24
 405               	.global	c_output_low
 406               		.type	c_output_low, @function
 407               	c_output_low:
 408               		.stabd	46,0,0
 126:main.c        **** void c_output_low( uint8_t pin ) { output_low( PORTC, pin ); }
 409               		.stabn	68,0,126,.LM20-.LFBB11
 410               	.LM20:
 411               	.LFBB11:
 412               	/* prologue: function */
 413               	/* frame size = 0 */
 414               	/* stack size = 0 */
 415               	.L__stack_usage = 0
 416               		.stabn	68,0,126,.LM21-.LFBB11
 417               	.LM21:
 418 00e6 95B3      		in r25,53-32
 419 00e8 21E0      		ldi r18,lo8(1)
 420 00ea 30E0      		ldi r19,hi8(1)
 421 00ec 00C0      		rjmp 2f
 422 00ee 220F      	1:	lsl r18
 423 00f0 331F      		rol r19
 424 00f2 8A95      	2:	dec r24
 425 00f4 02F4      		brpl 1b
 426 00f6 2095      		com r18
 427 00f8 2923      		and r18,r25
 428 00fa 25BB      		out 53-32,r18
 429               	/* epilogue start */
 430 00fc 0895      		ret
 431               		.size	c_output_low, .-c_output_low
 432               	.Lscope11:
 433               		.stabs	"",36,0,0,.Lscope11-.LFBB11
 434               		.stabd	78,0,0
 435               		.stabs	"c_output_high:F(0,15)",36,0,127,c_output_high
 436               		.stabs	"pin:P(9,2)",64,0,127,24
 437               	.global	c_output_high
 438               		.type	c_output_high, @function
 439               	c_output_high:
 440               		.stabd	46,0,0
 127:main.c        **** void c_output_high( uint8_t pin ) { output_high( PORTC, pin ); }
 441               		.stabn	68,0,127,.LM22-.LFBB12
 442               	.LM22:
 443               	.LFBB12:
GAS LISTING /tmp/ccGIF4s8.s 			page 11


 444               	/* prologue: function */
 445               	/* frame size = 0 */
 446               	/* stack size = 0 */
 447               	.L__stack_usage = 0
 448               		.stabn	68,0,127,.LM23-.LFBB12
 449               	.LM23:
 450 00fe 95B3      		in r25,53-32
 451 0100 21E0      		ldi r18,lo8(1)
 452 0102 30E0      		ldi r19,hi8(1)
 453 0104 00C0      		rjmp 2f
 454 0106 220F      	1:	lsl r18
 455 0108 331F      		rol r19
 456 010a 8A95      	2:	dec r24
 457 010c 02F4      		brpl 1b
 458 010e 922B      		or r25,r18
 459 0110 95BB      		out 53-32,r25
 460               	/* epilogue start */
 461 0112 0895      		ret
 462               		.size	c_output_high, .-c_output_high
 463               	.Lscope12:
 464               		.stabs	"",36,0,0,.Lscope12-.LFBB12
 465               		.stabd	78,0,0
 466               		.stabs	"d_set_input:F(0,15)",36,0,129,d_set_input
 467               		.stabs	"pin:P(9,2)",64,0,129,24
 468               	.global	d_set_input
 469               		.type	d_set_input, @function
 470               	d_set_input:
 471               		.stabd	46,0,0
 128:main.c        **** 
 129:main.c        **** void d_set_input( uint8_t pin ) { set_input( DDRD, pin ); }
 472               		.stabn	68,0,129,.LM24-.LFBB13
 473               	.LM24:
 474               	.LFBB13:
 475               	/* prologue: function */
 476               	/* frame size = 0 */
 477               	/* stack size = 0 */
 478               	.L__stack_usage = 0
 479               		.stabn	68,0,129,.LM25-.LFBB13
 480               	.LM25:
 481 0114 91B3      		in r25,49-32
 482 0116 21E0      		ldi r18,lo8(1)
 483 0118 30E0      		ldi r19,hi8(1)
 484 011a 00C0      		rjmp 2f
 485 011c 220F      	1:	lsl r18
 486 011e 331F      		rol r19
 487 0120 8A95      	2:	dec r24
 488 0122 02F4      		brpl 1b
 489 0124 2095      		com r18
 490 0126 2923      		and r18,r25
 491 0128 21BB      		out 49-32,r18
 492               	/* epilogue start */
 493 012a 0895      		ret
 494               		.size	d_set_input, .-d_set_input
 495               	.Lscope13:
 496               		.stabs	"",36,0,0,.Lscope13-.LFBB13
 497               		.stabd	78,0,0
 498               		.stabs	"d_set_output:F(0,15)",36,0,130,d_set_output
GAS LISTING /tmp/ccGIF4s8.s 			page 12


 499               		.stabs	"pin:P(9,2)",64,0,130,24
 500               	.global	d_set_output
 501               		.type	d_set_output, @function
 502               	d_set_output:
 503               		.stabd	46,0,0
 130:main.c        **** void d_set_output( uint8_t pin ) { set_output( DDRD, pin ); }
 504               		.stabn	68,0,130,.LM26-.LFBB14
 505               	.LM26:
 506               	.LFBB14:
 507               	/* prologue: function */
 508               	/* frame size = 0 */
 509               	/* stack size = 0 */
 510               	.L__stack_usage = 0
 511               		.stabn	68,0,130,.LM27-.LFBB14
 512               	.LM27:
 513 012c 91B3      		in r25,49-32
 514 012e 21E0      		ldi r18,lo8(1)
 515 0130 30E0      		ldi r19,hi8(1)
 516 0132 00C0      		rjmp 2f
 517 0134 220F      	1:	lsl r18
 518 0136 331F      		rol r19
 519 0138 8A95      	2:	dec r24
 520 013a 02F4      		brpl 1b
 521 013c 922B      		or r25,r18
 522 013e 91BB      		out 49-32,r25
 523               	/* epilogue start */
 524 0140 0895      		ret
 525               		.size	d_set_output, .-d_set_output
 526               	.Lscope14:
 527               		.stabs	"",36,0,0,.Lscope14-.LFBB14
 528               		.stabd	78,0,0
 529               		.stabs	"d_output_low:F(0,15)",36,0,131,d_output_low
 530               		.stabs	"pin:P(9,2)",64,0,131,24
 531               	.global	d_output_low
 532               		.type	d_output_low, @function
 533               	d_output_low:
 534               		.stabd	46,0,0
 131:main.c        **** void d_output_low( uint8_t pin ) { output_low( PORTD, pin ); }
 535               		.stabn	68,0,131,.LM28-.LFBB15
 536               	.LM28:
 537               	.LFBB15:
 538               	/* prologue: function */
 539               	/* frame size = 0 */
 540               	/* stack size = 0 */
 541               	.L__stack_usage = 0
 542               		.stabn	68,0,131,.LM29-.LFBB15
 543               	.LM29:
 544 0142 92B3      		in r25,50-32
 545 0144 21E0      		ldi r18,lo8(1)
 546 0146 30E0      		ldi r19,hi8(1)
 547 0148 00C0      		rjmp 2f
 548 014a 220F      	1:	lsl r18
 549 014c 331F      		rol r19
 550 014e 8A95      	2:	dec r24
 551 0150 02F4      		brpl 1b
 552 0152 2095      		com r18
 553 0154 2923      		and r18,r25
GAS LISTING /tmp/ccGIF4s8.s 			page 13


 554 0156 22BB      		out 50-32,r18
 555               	/* epilogue start */
 556 0158 0895      		ret
 557               		.size	d_output_low, .-d_output_low
 558               	.Lscope15:
 559               		.stabs	"",36,0,0,.Lscope15-.LFBB15
 560               		.stabd	78,0,0
 561               		.stabs	"d_output_high:F(0,15)",36,0,132,d_output_high
 562               		.stabs	"pin:P(9,2)",64,0,132,24
 563               	.global	d_output_high
 564               		.type	d_output_high, @function
 565               	d_output_high:
 566               		.stabd	46,0,0
 132:main.c        **** void d_output_high( uint8_t pin ) { output_high( PORTD, pin ); }
 567               		.stabn	68,0,132,.LM30-.LFBB16
 568               	.LM30:
 569               	.LFBB16:
 570               	/* prologue: function */
 571               	/* frame size = 0 */
 572               	/* stack size = 0 */
 573               	.L__stack_usage = 0
 574               		.stabn	68,0,132,.LM31-.LFBB16
 575               	.LM31:
 576 015a 92B3      		in r25,50-32
 577 015c 21E0      		ldi r18,lo8(1)
 578 015e 30E0      		ldi r19,hi8(1)
 579 0160 00C0      		rjmp 2f
 580 0162 220F      	1:	lsl r18
 581 0164 331F      		rol r19
 582 0166 8A95      	2:	dec r24
 583 0168 02F4      		brpl 1b
 584 016a 922B      		or r25,r18
 585 016c 92BB      		out 50-32,r25
 586               	/* epilogue start */
 587 016e 0895      		ret
 588               		.size	d_output_high, .-d_output_high
 589               	.Lscope16:
 590               		.stabs	"",36,0,0,.Lscope16-.LFBB16
 591               		.stabd	78,0,0
 592               		.stabs	"ADC_Init:F(0,15)",36,0,227,ADC_Init
 593               	.global	ADC_Init
 594               		.type	ADC_Init, @function
 595               	ADC_Init:
 596               		.stabd	46,0,0
 133:main.c        **** 
 134:main.c        **** char *append(const char *, char);
 135:main.c        **** 
 136:main.c        **** /*
 137:main.c        **** Some global stuff
 138:main.c        **** */
 139:main.c        **** /* The buffer for receiving data from the bluetooth module */
 140:main.c        **** char buffer_bluetooth[buffer_length];
 141:main.c        **** /* Buffer iterator */
 142:main.c        **** uint8_t buffer_i;
 143:main.c        **** /* Received data char */
 144:main.c        **** unsigned char recv_byte;
 145:main.c        **** 
GAS LISTING /tmp/ccGIF4s8.s 			page 14


 146:main.c        **** int states[] = {
 147:main.c        ****   1, /* Initial state of the system */
 148:main.c        ****   2, /* Bluetooth check */
 149:main.c        ****   3, /* Error state */
 150:main.c        ****   4, /* Waiting for the bluetooth connection from the host */
 151:main.c        ****   5, /* Bluetooth client is connected, waiting for the command */
 152:main.c        ****   6, /* Collect data and send it to the bluetooth immediatelly */
 153:main.c        **** };
 154:main.c        **** 
 155:main.c        **** /* Defining the initial state of the system */
 156:main.c        **** int state = 0;
 157:main.c        **** 
 158:main.c        **** /* Main function */
 159:main.c        **** int main() {
 160:main.c        **** 
 161:main.c        ****   /* 
 162:main.c        ****   Make 8Mhz from 16Mhz to work on 3.3V,
 163:main.c        ****   Scale 1
 164:main.c        ****   */
 165:main.c        ****   clock_prescale_set(1);
 166:main.c        **** 
 167:main.c        ****   /*
 168:main.c        ****   Initialization of USART debug unit
 169:main.c        ****   */
 170:main.c        ****   USART_debug_init();
 171:main.c        **** 
 172:main.c        ****   /*
 173:main.c        ****   Debugging units
 174:main.c        ****   */
 175:main.c        ****   debug_init();
 176:main.c        **** 
 177:main.c        ****   /* 
 178:main.c        ****   Initialize the interrupts 
 179:main.c        ****   */
 180:main.c        ****   ADC_Init();
 181:main.c        **** 
 182:main.c        ****   /*
 183:main.c        ****   Initialize the USART for communication with Bluetooth module
 184:main.c        ****   */
 185:main.c        ****   USART_bluetooth_init();
 186:main.c        **** 
 187:main.c        ****   /*
 188:main.c        ****   Enable global interrupts
 189:main.c        ****   */
 190:main.c        ****   sei();
 191:main.c        **** 
 192:main.c        ****   // delay_ms(32000);
 193:main.c        ****   // USART_debug_send(0x48);
 194:main.c        **** 
 195:main.c        ****   /* Send enable to the ADC */
 196:main.c        ****   // ADC_start();
 197:main.c        **** 
 198:main.c        ****   // USART_bluetooth_send(0x48);
 199:main.c        ****   
 200:main.c        ****   // USART_debug_send('H');
 201:main.c        **** 
 202:main.c        ****   // USART_bluetooth_send_message("AT+NAME=patric");
GAS LISTING /tmp/ccGIF4s8.s 			page 15


 203:main.c        **** 
 204:main.c        ****   // MASTER switch
 205:main.c        ****   // USART_bluetooth_send_message("AT+ROLES");
 206:main.c        **** 
 207:main.c        ****   // QUERY
 208:main.c        ****   USART_bluetooth_send_message("AT+ENQ");
 209:main.c        ****   // USART_bluetooth_send_message("AT+ROLEM");
 210:main.c        ****   // Modem enable
 211:main.c        ****   // USART_bluetooth_send_message("AT+MODEM-");
 212:main.c        ****   // USART_bluetooth_send(0x48);
 213:main.c        **** 
 214:main.c        ****   // USART_bluetooth_check_alive();
 215:main.c        **** 
 216:main.c        ****   // debug_click();
 217:main.c        ****   // b_output_high( DEBUG_OUTPUT_PIN );
 218:main.c        **** 
 219:main.c        ****   /* Forever alone loop */
 220:main.c        ****   for (;;) {
 221:main.c        ****   }
 222:main.c        **** 
 223:main.c        ****   return 1;
 224:main.c        **** }
 225:main.c        **** 
 226:main.c        **** /* ADC intialization with interrupt */
 227:main.c        **** void ADC_Init() {
 597               		.stabn	68,0,227,.LM32-.LFBB17
 598               	.LM32:
 599               	.LFBB17:
 600               	/* prologue: function */
 601               	/* frame size = 0 */
 602               	/* stack size = 0 */
 603               	.L__stack_usage = 0
 228:main.c        **** 
 229:main.c        ****   /* Interrupt on failing edge */
 230:main.c        ****   MCUCR = (1 << ISC01 ) | (0 << ISC00);
 604               		.stabn	68,0,230,.LM33-.LFBB17
 605               	.LM33:
 606 0170 82E0      		ldi r24,lo8(2)
 607 0172 85BF      		out 85-32,r24
 231:main.c        **** 
 232:main.c        ****   /* Turn on interrupts */
 233:main.c        ****   GICR |= (1 << INT0 );
 608               		.stabn	68,0,233,.LM34-.LFBB17
 609               	.LM34:
 610 0174 8BB7      		in r24,91-32
 611 0176 8064      		ori r24,lo8(64)
 612 0178 8BBF      		out 91-32,r24
 234:main.c        ****   /* Set PD as output */
 235:main.c        ****   c_set_output( PD );
 613               		.stabn	68,0,235,.LM35-.LFBB17
 614               	.LM35:
 615 017a 80E0      		ldi r24,lo8(0)
 616 017c 0E94 0000 		call c_set_output
 236:main.c        **** 
 237:main.c        ****   /* SET RD as output */
 238:main.c        ****   c_set_output( RD );
 617               		.stabn	68,0,238,.LM36-.LFBB17
GAS LISTING /tmp/ccGIF4s8.s 			page 16


 618               	.LM36:
 619 0180 81E0      		ldi r24,lo8(1)
 620 0182 0E94 0000 		call c_set_output
 239:main.c        **** 
 240:main.c        ****   /* Set CR as output */
 241:main.c        ****   c_set_output( CS );
 621               		.stabn	68,0,241,.LM37-.LFBB17
 622               	.LM37:
 623 0186 82E0      		ldi r24,lo8(2)
 624 0188 0E94 0000 		call c_set_output
 242:main.c        **** 
 243:main.c        ****   /* Set CONVST as output */
 244:main.c        ****   c_set_output( CONVST );
 625               		.stabn	68,0,244,.LM38-.LFBB17
 626               	.LM38:
 627 018c 83E0      		ldi r24,lo8(3)
 628 018e 0E94 0000 		call c_set_output
 245:main.c        **** 
 246:main.c        ****   /* Set PORTA as input */
 247:main.c        ****   DDRA = 0x00;
 629               		.stabn	68,0,247,.LM39-.LFBB17
 630               	.LM39:
 631 0192 1ABA      		out 58-32,__zero_reg__
 632               	/* epilogue start */
 248:main.c        **** 
 249:main.c        **** }
 633               		.stabn	68,0,249,.LM40-.LFBB17
 634               	.LM40:
 635 0194 0895      		ret
 636               		.size	ADC_Init, .-ADC_Init
 637               	.Lscope17:
 638               		.stabs	"",36,0,0,.Lscope17-.LFBB17
 639               		.stabd	78,0,0
 640               		.stabs	"ADC_stop:F(0,15)",36,0,304,ADC_stop
 641               	.global	ADC_stop
 642               		.type	ADC_stop, @function
 643               	ADC_stop:
 644               		.stabd	46,0,0
 250:main.c        **** 
 251:main.c        **** /* Make the ADC readout */ 
 252:main.c        **** void ADC_read() {
 253:main.c        **** 
 254:main.c        ****   // uint8_t adc_value;
 255:main.c        **** 
 256:main.c        ****   /* Chip select as low */
 257:main.c        ****   c_output_low( CS );
 258:main.c        ****   /* Read data as low */
 259:main.c        ****   c_output_low( RD );
 260:main.c        ****   
 261:main.c        ****   /* Read the PORTA */
 262:main.c        ****   // adc_value = PINA;
 263:main.c        **** 
 264:main.c        ****   /* Make Read Data high */
 265:main.c        ****   c_output_high( RD );
 266:main.c        ****   /* Make Chip select high */
 267:main.c        ****   c_output_high( CS );
 268:main.c        **** 
GAS LISTING /tmp/ccGIF4s8.s 			page 17


 269:main.c        ****   /* Stop ADC */
 270:main.c        ****   ADC_stop();
 271:main.c        **** 
 272:main.c        ****   // delay_ms(100);
 273:main.c        **** 
 274:main.c        ****   // /* Start conversion again */
 275:main.c        ****   // ADC_start();
 276:main.c        ****   // debug_data(adc_value);
 277:main.c        ****   
 278:main.c        **** }
 279:main.c        **** 
 280:main.c        **** /* Make the ADC readout start */
 281:main.c        **** void ADC_start() {
 282:main.c        **** 
 283:main.c        ****   /* MODE 2 Operation */
 284:main.c        ****   c_output_low( CONVST );
 285:main.c        **** 
 286:main.c        ****   /* Pre-start configuration */
 287:main.c        ****   /* Wake up ADC - high */
 288:main.c        ****   c_output_high( PD );
 289:main.c        ****   /* Chip select - high */
 290:main.c        ****   c_output_high( CS );
 291:main.c        ****   /* Read data - high */
 292:main.c        ****   c_output_high( RD );
 293:main.c        ****   /* Start of conversation - low */
 294:main.c        ****   c_output_low( CONVST );
 295:main.c        **** 
 296:main.c        ****   /* Start of conversation - high */
 297:main.c        ****   c_output_high( CONVST );
 298:main.c        ****   delay_ms(10); /* t_power-up */
 299:main.c        ****   /* Start of conversation - low */
 300:main.c        ****   c_output_low( CONVST );
 301:main.c        **** 
 302:main.c        **** }
 303:main.c        **** 
 304:main.c        **** void ADC_stop() {
 645               		.stabn	68,0,304,.LM41-.LFBB18
 646               	.LM41:
 647               	.LFBB18:
 648               	/* prologue: function */
 649               	/* frame size = 0 */
 650               	/* stack size = 0 */
 651               	.L__stack_usage = 0
 305:main.c        **** 
 306:main.c        ****   output_low( PORTC, CS );
 652               		.stabn	68,0,306,.LM42-.LFBB18
 653               	.LM42:
 654 0196 AA98      		cbi 53-32,2
 655               	/* epilogue start */
 307:main.c        **** 
 308:main.c        **** }
 656               		.stabn	68,0,308,.LM43-.LFBB18
 657               	.LM43:
 658 0198 0895      		ret
 659               		.size	ADC_stop, .-ADC_stop
 660               	.Lscope18:
 661               		.stabs	"",36,0,0,.Lscope18-.LFBB18
GAS LISTING /tmp/ccGIF4s8.s 			page 18


 662               		.stabd	78,0,0
 663               		.stabs	"ADC_read:F(0,15)",36,0,252,ADC_read
 664               	.global	ADC_read
 665               		.type	ADC_read, @function
 666               	ADC_read:
 667               		.stabd	46,0,0
 252:main.c        **** void ADC_read() {
 668               		.stabn	68,0,252,.LM44-.LFBB19
 669               	.LM44:
 670               	.LFBB19:
 671               	/* prologue: function */
 672               	/* frame size = 0 */
 673               	/* stack size = 0 */
 674               	.L__stack_usage = 0
 257:main.c        ****   c_output_low( CS );
 675               		.stabn	68,0,257,.LM45-.LFBB19
 676               	.LM45:
 677 019a 82E0      		ldi r24,lo8(2)
 678 019c 0E94 0000 		call c_output_low
 259:main.c        ****   c_output_low( RD );
 679               		.stabn	68,0,259,.LM46-.LFBB19
 680               	.LM46:
 681 01a0 81E0      		ldi r24,lo8(1)
 682 01a2 0E94 0000 		call c_output_low
 265:main.c        ****   c_output_high( RD );
 683               		.stabn	68,0,265,.LM47-.LFBB19
 684               	.LM47:
 685 01a6 81E0      		ldi r24,lo8(1)
 686 01a8 0E94 0000 		call c_output_high
 267:main.c        ****   c_output_high( CS );
 687               		.stabn	68,0,267,.LM48-.LFBB19
 688               	.LM48:
 689 01ac 82E0      		ldi r24,lo8(2)
 690 01ae 0E94 0000 		call c_output_high
 270:main.c        ****   ADC_stop();
 691               		.stabn	68,0,270,.LM49-.LFBB19
 692               	.LM49:
 693 01b2 0E94 0000 		call ADC_stop
 694               	/* epilogue start */
 278:main.c        **** }
 695               		.stabn	68,0,278,.LM50-.LFBB19
 696               	.LM50:
 697 01b6 0895      		ret
 698               		.size	ADC_read, .-ADC_read
 699               	.Lscope19:
 700               		.stabs	"",36,0,0,.Lscope19-.LFBB19
 701               		.stabd	78,0,0
 702               		.stabs	"USART_bluetooth_init:F(0,15)",36,0,315,USART_bluetooth_init
 703               	.global	USART_bluetooth_init
 704               		.type	USART_bluetooth_init, @function
 705               	USART_bluetooth_init:
 706               		.stabd	46,0,0
 309:main.c        **** 
 310:main.c        **** /**
 311:main.c        **** * Communication with Bluetooth USART initialization
 312:main.c        **** * Configuration: 19200/8-N-1
 313:main.c        **** * TODO: do a better initialization set-up
GAS LISTING /tmp/ccGIF4s8.s 			page 19


 314:main.c        **** ***/
 315:main.c        **** void USART_bluetooth_init() {
 707               		.stabn	68,0,315,.LM51-.LFBB20
 708               	.LM51:
 709               	.LFBB20:
 710               	/* prologue: function */
 711               	/* frame size = 0 */
 712               	/* stack size = 0 */
 713               	.L__stack_usage = 0
 316:main.c        **** 
 317:main.c        ****   /* Interrupt on falling edge */
 318:main.c        ****   // MCUCR = (1 << ISC11 ) | (1 << ISC10);
 319:main.c        **** 
 320:main.c        ****   /* Turn on interrupts */
 321:main.c        ****   // GICR |= (1 << INT1);
 322:main.c        **** 
 323:main.c        ****   /* Enable received and transmitter */
 324:main.c        ****   UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
 714               		.stabn	68,0,324,.LM52-.LFBB20
 715               	.LM52:
 716 01b8 8AB1      		in r24,42-32
 717 01ba 8861      		ori r24,lo8(24)
 718 01bc 8AB9      		out 42-32,r24
 325:main.c        **** 
 326:main.c        ****   /* Enable receive interrupt */
 327:main.c        ****   UCSR0B |= (1 << RXCIE0);
 719               		.stabn	68,0,327,.LM53-.LFBB20
 720               	.LM53:
 721 01be 579A      		sbi 42-32,7
 328:main.c        ****   /* 8 bit configuration */
 329:main.c        ****   UCSR0B |= (0 << UCSZ02);
 722               		.stabn	68,0,329,.LM54-.LFBB20
 723               	.LM54:
 724 01c0 8AB1      		in r24,42-32
 725 01c2 8AB9      		out 42-32,r24
 330:main.c        ****   /* No double speed option */
 331:main.c        ****   UCSR0A |= (0 << U2X0);
 726               		.stabn	68,0,331,.LM55-.LFBB20
 727               	.LM55:
 728 01c4 8BB1      		in r24,43-32
 729 01c6 8BB9      		out 43-32,r24
 332:main.c        **** 
 333:main.c        ****   /* Use 8 bit configuration sizes */
 334:main.c        ****   UCSR0C |= (0 << URSEL0);
 730               		.stabn	68,0,334,.LM56-.LFBB20
 731               	.LM56:
 732 01c8 80B5      		in r24,64-32
 733 01ca 80BD      		out 64-32,r24
 335:main.c        ****   UCSR0C |= (0 << UMSEL0) | (0<<UPM00) | (0<<UPM01) | (1<<UCSZ00) | (1<<UCSZ01);
 734               		.stabn	68,0,335,.LM57-.LFBB20
 735               	.LM57:
 736 01cc 80B5      		in r24,64-32
 737 01ce 8660      		ori r24,lo8(6)
 738 01d0 80BD      		out 64-32,r24
 336:main.c        **** 
 337:main.c        ****   // UBRR0H |= (1 << URSEL0);
 338:main.c        **** 
GAS LISTING /tmp/ccGIF4s8.s 			page 20


 339:main.c        ****   /* Set baud rate */
 340:main.c        ****   /* 19200 -- 16Mhz */
 341:main.c        ****   UBRR0H = (25) >> 8;
 739               		.stabn	68,0,341,.LM58-.LFBB20
 740               	.LM58:
 741 01d2 10BC      		out 64-32,__zero_reg__
 342:main.c        ****   UBRR0L = (25);
 742               		.stabn	68,0,342,.LM59-.LFBB20
 743               	.LM59:
 744 01d4 89E1      		ldi r24,lo8(25)
 745 01d6 89B9      		out 41-32,r24
 343:main.c        **** 
 344:main.c        ****   d_set_output(BLUETOOTH_CTS_PIN);
 746               		.stabn	68,0,344,.LM60-.LFBB20
 747               	.LM60:
 748 01d8 84E0      		ldi r24,lo8(4)
 749 01da 0E94 0000 		call d_set_output
 345:main.c        ****   /* Set low -- make the data transfer happen */
 346:main.c        ****   d_output_low(BLUETOOTH_CTS_PIN);
 750               		.stabn	68,0,346,.LM61-.LFBB20
 751               	.LM61:
 752 01de 84E0      		ldi r24,lo8(4)
 753 01e0 0E94 0000 		call d_output_low
 754               	/* epilogue start */
 347:main.c        **** 
 348:main.c        **** }
 755               		.stabn	68,0,348,.LM62-.LFBB20
 756               	.LM62:
 757 01e4 0895      		ret
 758               		.size	USART_bluetooth_init, .-USART_bluetooth_init
 759               	.Lscope20:
 760               		.stabs	"",36,0,0,.Lscope20-.LFBB20
 761               		.stabd	78,0,0
 762               		.stabs	"USART_bluetooth_send:F(0,15)",36,0,351,USART_bluetooth_send
 763               		.stabs	"send_byte:P(0,11)",64,0,351,24
 764               	.global	USART_bluetooth_send
 765               		.type	USART_bluetooth_send, @function
 766               	USART_bluetooth_send:
 767               		.stabd	46,0,0
 349:main.c        **** 
 350:main.c        **** /* USART send byte */ 
 351:main.c        **** void USART_bluetooth_send(unsigned char send_byte) {
 768               		.stabn	68,0,351,.LM63-.LFBB21
 769               	.LM63:
 770               	.LFBB21:
 771               	/* prologue: function */
 772               	/* frame size = 0 */
 773               	/* stack size = 0 */
 774               	.L__stack_usage = 0
 775               	.L22:
 352:main.c        **** 
 353:main.c        ****   /* Wait until the register is ready */
 354:main.c        ****   while ((UCSR0A & (1<<UDRE0)) == 0) {};
 776               		.stabn	68,0,354,.LM64-.LFBB21
 777               	.LM64:
 778 01e6 5D9B      		sbis 43-32,5
 779 01e8 00C0      		rjmp .L22
GAS LISTING /tmp/ccGIF4s8.s 			page 21


 355:main.c        **** 
 356:main.c        ****   /* Send the byte */
 357:main.c        ****   UDR0 = send_byte;
 780               		.stabn	68,0,357,.LM65-.LFBB21
 781               	.LM65:
 782 01ea 8CB9      		out 44-32,r24
 783               	/* epilogue start */
 358:main.c        **** 
 359:main.c        **** }
 784               		.stabn	68,0,359,.LM66-.LFBB21
 785               	.LM66:
 786 01ec 0895      		ret
 787               		.size	USART_bluetooth_send, .-USART_bluetooth_send
 788               	.Lscope21:
 789               		.stabs	"",36,0,0,.Lscope21-.LFBB21
 790               		.stabd	78,0,0
 791               		.stabs	"USART_debug_init:F(0,15)",36,0,484,USART_debug_init
 792               	.global	USART_debug_init
 793               		.type	USART_debug_init, @function
 794               	USART_debug_init:
 795               		.stabd	46,0,0
 360:main.c        **** 
 361:main.c        **** /**
 362:main.c        **** * Bluetooth receive event handler
 363:main.c        **** **/
 364:main.c        **** void USART_bluetooth_recv(unsigned char recv_byte) {
 365:main.c        ****   /* Echo to debug */
 366:main.c        ****   USART_debug_send( recv_byte );
 367:main.c        ****   // USART_bluetooth_send(recv_byte);
 368:main.c        ****   // usart_buffer[usart_buffer_i] = recv_byte;
 369:main.c        ****   // usart_buffer_i = usart_buffer_i + 1;
 370:main.c        ****   // if (recv_byte == 0x0d) {
 371:main.c        ****   //   USART_debug_send_buffer();
 372:main.c        ****   // }
 373:main.c        **** 
 374:main.c        ****   /* Append receiving byte */
 375:main.c        ****   buffer_bluetooth[buffer_i] = recv_byte;
 376:main.c        ****   if (buffer_i < buffer_length) {
 377:main.c        ****     /*
 378:main.c        ****     We still have the space for more bytes
 379:main.c        ****     */
 380:main.c        ****     buffer_i = buffer_i + 1;
 381:main.c        ****   } else {
 382:main.c        ****     /*
 383:main.c        ****     No more spaces are available, need to
 384:main.c        ****     do something about it
 385:main.c        ****     */
 386:main.c        ****     /* Resetting the buffer */
 387:main.c        ****     buffer_i = 0;
 388:main.c        ****     memset(buffer_bluetooth, 0, buffer_length);
 389:main.c        ****   }
 390:main.c        ****   if (buffer_i > 0) {
 391:main.c        ****     /* Check if the last received messages where cr,lf */
 392:main.c        ****     if (buffer_bluetooth[buffer_i] == 0x0a && buffer_bluetooth[buffer_i-1] == 0x0d) {
 393:main.c        ****       /* Make a message, that the buffer is fully received */
 394:main.c        ****       /* Reseting the buffer */
 395:main.c        **** 
GAS LISTING /tmp/ccGIF4s8.s 			page 22


 396:main.c        ****       buffer_i = 0;
 397:main.c        ****       memset(buffer_bluetooth, 0, buffer_length);
 398:main.c        ****     }
 399:main.c        ****   }
 400:main.c        **** }
 401:main.c        **** 
 402:main.c        **** /**
 403:main.c        **** * Check if bluetooth is alive
 404:main.c        **** **/
 405:main.c        **** void USART_bluetooth_check_alive() {
 406:main.c        ****   /* 
 407:main.c        ****   * AT+VER is a basic query to check
 408:main.c        ****   * if the device is alive 
 409:main.c        ****   */
 410:main.c        ****   USART_bluetooth_send_message("AT+VER");
 411:main.c        **** }
 412:main.c        **** 
 413:main.c        **** /**
 414:main.c        **** * Echo settings
 415:main.c        **** * Possible options:
 416:main.c        **** * - `+` -- makes echo active
 417:main.c        **** * - `-` -- makes echo not active
 418:main.c        **** **/
 419:main.c        **** void USART_bluetooth_at_echo(char option) {
 420:main.c        ****   char *message;
 421:main.c        ****   /* Check the comming options */
 422:main.c        ****   if (option == '+' || option == '-') {
 423:main.c        ****     message = append("AT+ECHO", option);
 424:main.c        ****     USART_bluetooth_send_message(message);
 425:main.c        ****     free(message);
 426:main.c        ****   }
 427:main.c        **** }
 428:main.c        **** 
 429:main.c        **** /**
 430:main.c        **** * Discover settings
 431:main.c        **** * Possible options:
 432:main.c        **** * - `+` -- makes discoverable
 433:main.c        **** * - `-` -- makes not discoverable
 434:main.c        **** **/
 435:main.c        **** void USART_bluetooth_at_discover(char option) {
 436:main.c        ****   char *message;
 437:main.c        ****   /* Check the comming options */
 438:main.c        ****   if (option == '+' || option == '-') {
 439:main.c        ****     message = append("AT+DCOV", option);
 440:main.c        ****     USART_bluetooth_send_message(message);
 441:main.c        ****     free(message);
 442:main.c        ****   }
 443:main.c        **** }
 444:main.c        **** 
 445:main.c        **** /**
 446:main.c        **** * Command response settings
 447:main.c        **** * Possible options:
 448:main.c        **** * - `+` -- makes responses active
 449:main.c        **** * - `-` -- makes responses not active
 450:main.c        **** **/
 451:main.c        **** void USART_bluetooth_at_response(char option) {
 452:main.c        ****   char *message;
GAS LISTING /tmp/ccGIF4s8.s 			page 23


 453:main.c        ****   /* Check the comming options */
 454:main.c        ****   if (option == '+' || option == '-') {
 455:main.c        ****     message = append("AT+RESP", option);
 456:main.c        ****     USART_bluetooth_send_message(message);
 457:main.c        ****     free(message);
 458:main.c        ****   }
 459:main.c        **** }
 460:main.c        **** 
 461:main.c        **** /**
 462:main.c        **** * Sending and receiving packages from the Bluetooth
 463:main.c        **** **/
 464:main.c        **** void USART_bluetooth_send_message(char *message) {
 465:main.c        ****   
 466:main.c        ****   uint8_t i = 0;
 467:main.c        ****   while(message[i] != '\0') {
 468:main.c        ****     /* Send the require characters */
 469:main.c        ****     USART_bluetooth_send(message[i]);
 470:main.c        ****     i = i + 1;
 471:main.c        ****     delay_ms(1);
 472:main.c        ****   }
 473:main.c        ****   /* End the message with cr */
 474:main.c        ****   USART_bluetooth_send(0x0d);
 475:main.c        **** 
 476:main.c        **** }
 477:main.c        **** 
 478:main.c        **** 
 479:main.c        **** /**
 480:main.c        **** * Communication with debug USART initialization
 481:main.c        **** * Configuration: 19200/8-N-1
 482:main.c        **** * TODO: do a better configuration set-up
 483:main.c        **** ***/
 484:main.c        **** void USART_debug_init() {
 796               		.stabn	68,0,484,.LM67-.LFBB22
 797               	.LM67:
 798               	.LFBB22:
 799               	/* prologue: function */
 800               	/* frame size = 0 */
 801               	/* stack size = 0 */
 802               	.L__stack_usage = 0
 485:main.c        ****   
 486:main.c        ****   /* Enable received and transmitter */
 487:main.c        ****   UCSR1B = (1<<RXEN1)|(1<<TXEN1);
 803               		.stabn	68,0,487,.LM68-.LFBB22
 804               	.LM68:
 805 01ee 88E1      		ldi r24,lo8(24)
 806 01f0 81B9      		out 33-32,r24
 488:main.c        **** 
 489:main.c        ****   /* Enable receive interrupt */
 490:main.c        ****   UCSR1B |= (1 << RXCIE1);
 807               		.stabn	68,0,490,.LM69-.LFBB22
 808               	.LM69:
 809 01f2 0F9A      		sbi 33-32,7
 491:main.c        ****   UCSR1B |= (0 << UCSZ12);
 810               		.stabn	68,0,491,.LM70-.LFBB22
 811               	.LM70:
 812 01f4 81B1      		in r24,33-32
 813 01f6 81B9      		out 33-32,r24
GAS LISTING /tmp/ccGIF4s8.s 			page 24


 492:main.c        **** 
 493:main.c        ****   /* Normal asynchronous mode */
 494:main.c        ****   UCSR1A |= (0 << U2X1);
 814               		.stabn	68,0,494,.LM71-.LFBB22
 815               	.LM71:
 816 01f8 82B1      		in r24,34-32
 817 01fa 82B9      		out 34-32,r24
 495:main.c        ****   /* Select */
 496:main.c        ****   UCSR1C = (1 << URSEL1) | (0 << UMSEL1) | (0<<UPM10) | (0<<UPM11) | (1<<UCSZ10) | (1<<UCSZ11);
 818               		.stabn	68,0,496,.LM72-.LFBB22
 819               	.LM72:
 820 01fc 86E8      		ldi r24,lo8(-122)
 821 01fe 8CBF      		out 92-32,r24
 497:main.c        **** 
 498:main.c        ****   /* Asynchronous mode */
 499:main.c        ****   // UCSR1C |= (0 << UMSEL1);
 500:main.c        ****   /* Parity mode -- disabled */
 501:main.c        ****   // UCSR1C |= (0 << UPM10);
 502:main.c        ****   // UCSR1C |= (0 << UPM11);
 503:main.c        ****   /* Stop bit -- 1 bit */
 504:main.c        ****   // UCSR1C |= (1 << USBS1);
 505:main.c        ****   /* Use 8bit character sizes */
 506:main.c        ****   // UCSR1C |= (1<<UCSZ10) | (1<<UCSZ11);
 507:main.c        ****   // UBRR1H |= (1 << URSEL1);
 508:main.c        **** 
 509:main.c        ****   /* Set baud rate */
 510:main.c        ****   /* 19200 -- 8Mhz */
 511:main.c        ****   UBRR1H = (25) >> 8;
 822               		.stabn	68,0,511,.LM73-.LFBB22
 823               	.LM73:
 824 0200 1CBE      		out 92-32,__zero_reg__
 512:main.c        ****   UBRR1L = (25);
 825               		.stabn	68,0,512,.LM74-.LFBB22
 826               	.LM74:
 827 0202 89E1      		ldi r24,lo8(25)
 828 0204 80B9      		out 32-32,r24
 829               	/* epilogue start */
 513:main.c        **** 
 514:main.c        **** }
 830               		.stabn	68,0,514,.LM75-.LFBB22
 831               	.LM75:
 832 0206 0895      		ret
 833               		.size	USART_debug_init, .-USART_debug_init
 834               	.Lscope22:
 835               		.stabs	"",36,0,0,.Lscope22-.LFBB22
 836               		.stabd	78,0,0
 837               		.stabs	"USART_debug_send:F(0,15)",36,0,516,USART_debug_send
 838               		.stabs	"send_byte:P(0,11)",64,0,516,24
 839               	.global	USART_debug_send
 840               		.type	USART_debug_send, @function
 841               	USART_debug_send:
 842               		.stabd	46,0,0
 515:main.c        **** 
 516:main.c        **** void USART_debug_send( unsigned char send_byte ) {
 843               		.stabn	68,0,516,.LM76-.LFBB23
 844               	.LM76:
 845               	.LFBB23:
GAS LISTING /tmp/ccGIF4s8.s 			page 25


 846               	/* prologue: function */
 847               	/* frame size = 0 */
 848               	/* stack size = 0 */
 849               	.L__stack_usage = 0
 850               	.L26:
 517:main.c        **** 
 518:main.c        ****   /* Wait until USART1 is ready */
 519:main.c        ****   while (( UCSR1A & (1<<UDRE1)) == 0) {};
 851               		.stabn	68,0,519,.LM77-.LFBB23
 852               	.LM77:
 853 0208 159B      		sbis 34-32,5
 854 020a 00C0      		rjmp .L26
 520:main.c        **** 
 521:main.c        ****   /* Send the byte */
 522:main.c        ****   UDR1 = send_byte;
 855               		.stabn	68,0,522,.LM78-.LFBB23
 856               	.LM78:
 857 020c 83B9      		out 35-32,r24
 858               	/* epilogue start */
 523:main.c        **** 
 524:main.c        **** }
 859               		.stabn	68,0,524,.LM79-.LFBB23
 860               	.LM79:
 861 020e 0895      		ret
 862               		.size	USART_debug_send, .-USART_debug_send
 863               	.Lscope23:
 864               		.stabs	"",36,0,0,.Lscope23-.LFBB23
 865               		.stabd	78,0,0
 866               		.stabs	"USART_bluetooth_recv:F(0,15)",36,0,364,USART_bluetooth_recv
 867               		.stabs	"recv_byte:P(0,11)",64,0,364,17
 868               	.global	USART_bluetooth_recv
 869               		.type	USART_bluetooth_recv, @function
 870               	USART_bluetooth_recv:
 871               		.stabd	46,0,0
 364:main.c        **** void USART_bluetooth_recv(unsigned char recv_byte) {
 872               		.stabn	68,0,364,.LM80-.LFBB24
 873               	.LM80:
 874               	.LFBB24:
 875 0210 1F93      		push r17
 876               	/* prologue: function */
 877               	/* frame size = 0 */
 878               	/* stack size = 1 */
 879               	.L__stack_usage = 1
 880 0212 182F      		mov r17,r24
 366:main.c        ****   USART_debug_send( recv_byte );
 881               		.stabn	68,0,366,.LM81-.LFBB24
 882               	.LM81:
 883 0214 0E94 0000 		call USART_debug_send
 375:main.c        ****   buffer_bluetooth[buffer_i] = recv_byte;
 884               		.stabn	68,0,375,.LM82-.LFBB24
 885               	.LM82:
 886 0218 8091 0000 		lds r24,buffer_i
 887 021c E82F      		mov r30,r24
 888 021e F0E0      		ldi r31,lo8(0)
 889 0220 E050      		subi r30,lo8(-(buffer_bluetooth))
 890 0222 F040      		sbci r31,hi8(-(buffer_bluetooth))
 891 0224 1083      		st Z,r17
GAS LISTING /tmp/ccGIF4s8.s 			page 26


 376:main.c        ****   if (buffer_i < buffer_length) {
 892               		.stabn	68,0,376,.LM83-.LFBB24
 893               	.LM83:
 894 0226 8931      		cpi r24,lo8(25)
 895 0228 00F4      		brsh .L29
 380:main.c        ****     buffer_i = buffer_i + 1;
 896               		.stabn	68,0,380,.LM84-.LFBB24
 897               	.LM84:
 898 022a 8F5F      		subi r24,lo8(-(1))
 899 022c 8093 0000 		sts buffer_i,r24
 900 0230 00C0      		rjmp .L30
 901               	.L29:
 387:main.c        ****     buffer_i = 0;
 902               		.stabn	68,0,387,.LM85-.LFBB24
 903               	.LM85:
 904 0232 1092 0000 		sts buffer_i,__zero_reg__
 388:main.c        ****     memset(buffer_bluetooth, 0, buffer_length);
 905               		.stabn	68,0,388,.LM86-.LFBB24
 906               	.LM86:
 907 0236 89E1      		ldi r24,lo8(25)
 908 0238 E0E0      		ldi r30,lo8(buffer_bluetooth)
 909 023a F0E0      		ldi r31,hi8(buffer_bluetooth)
 910 023c DF01      		movw r26,r30
 911 023e 1D92      		st X+,__zero_reg__
 912 0240 8A95      	        dec r24
 913 0242 01F4      		brne .-6
 914               	.L30:
 390:main.c        ****   if (buffer_i > 0) {
 915               		.stabn	68,0,390,.LM87-.LFBB24
 916               	.LM87:
 917 0244 E091 0000 		lds r30,buffer_i
 918 0248 EE23      		tst r30
 919 024a 01F0      		breq .L28
 392:main.c        ****     if (buffer_bluetooth[buffer_i] == 0x0a && buffer_bluetooth[buffer_i-1] == 0x0d) {
 920               		.stabn	68,0,392,.LM88-.LFBB24
 921               	.LM88:
 922 024c F0E0      		ldi r31,lo8(0)
 923 024e E050      		subi r30,lo8(-(buffer_bluetooth))
 924 0250 F040      		sbci r31,hi8(-(buffer_bluetooth))
 925 0252 8081      		ld r24,Z
 926 0254 8A30      		cpi r24,lo8(10)
 927 0256 01F4      		brne .L28
 392:main.c        ****     if (buffer_bluetooth[buffer_i] == 0x0a && buffer_bluetooth[buffer_i-1] == 0x0d) {
 928               		.stabn	68,0,392,.LM89-.LFBB24
 929               	.LM89:
 930 0258 3197      		sbiw r30,1
 931 025a 8081      		ld r24,Z
 932 025c 8D30      		cpi r24,lo8(13)
 933 025e 01F4      		brne .L28
 396:main.c        ****       buffer_i = 0;
 934               		.stabn	68,0,396,.LM90-.LFBB24
 935               	.LM90:
 936 0260 1092 0000 		sts buffer_i,__zero_reg__
 397:main.c        ****       memset(buffer_bluetooth, 0, buffer_length);
 937               		.stabn	68,0,397,.LM91-.LFBB24
 938               	.LM91:
 939 0264 89E1      		ldi r24,lo8(25)
GAS LISTING /tmp/ccGIF4s8.s 			page 27


 940 0266 E0E0      		ldi r30,lo8(buffer_bluetooth)
 941 0268 F0E0      		ldi r31,hi8(buffer_bluetooth)
 942 026a DF01      		movw r26,r30
 943 026c 1D92      		st X+,__zero_reg__
 944 026e 8A95      	        dec r24
 945 0270 01F4      		brne .-6
 946               	.L28:
 947               	/* epilogue start */
 400:main.c        **** }
 948               		.stabn	68,0,400,.LM92-.LFBB24
 949               	.LM92:
 950 0272 1F91      		pop r17
 951 0274 0895      		ret
 952               		.size	USART_bluetooth_recv, .-USART_bluetooth_recv
 953               	.Lscope24:
 954               		.stabs	"",36,0,0,.Lscope24-.LFBB24
 955               		.stabd	78,0,0
 956               		.stabs	"USART_debug_send_message:F(0,15)",36,0,529,USART_debug_send_message
 957               		.stabs	"message:P(0,16)=*(0,2)",64,0,529,28
 958               	.global	USART_debug_send_message
 959               		.type	USART_debug_send_message, @function
 960               	USART_debug_send_message:
 961               		.stabd	46,0,0
 525:main.c        **** 
 526:main.c        **** /**
 527:main.c        **** * Sending the received package from the debug
 528:main.c        **** ***/
 529:main.c        **** void USART_debug_send_message(char *message) {
 962               		.stabn	68,0,529,.LM93-.LFBB25
 963               	.LM93:
 964               	.LFBB25:
 965 0276 1F93      		push r17
 966 0278 CF93      		push r28
 967 027a DF93      		push r29
 968               	/* prologue: function */
 969               	/* frame size = 0 */
 970               	/* stack size = 3 */
 971               	.L__stack_usage = 3
 972 027c EC01      		movw r28,r24
 530:main.c        ****   /* Request the line */
 531:main.c        ****   d_output_low( BLUETOOTH_CTS_PIN );
 973               		.stabn	68,0,531,.LM94-.LFBB25
 974               	.LM94:
 975 027e 84E0      		ldi r24,lo8(4)
 976 0280 0E94 0000 		call d_output_low
 532:main.c        ****   uint8_t i = 0;
 977               		.stabn	68,0,532,.LM95-.LFBB25
 978               	.LM95:
 979 0284 10E0      		ldi r17,lo8(0)
 533:main.c        ****   while (message[i] != '\0') {
 980               		.stabn	68,0,533,.LM96-.LFBB25
 981               	.LM96:
 982 0286 00C0      		rjmp .L33
 983               	.L34:
 534:main.c        ****     USART_debug_send(message[i]);
 984               		.stabn	68,0,534,.LM97-.LFBB25
 985               	.LM97:
GAS LISTING /tmp/ccGIF4s8.s 			page 28


 986 0288 0E94 0000 		call USART_debug_send
 535:main.c        ****     i = i + 1;
 987               		.stabn	68,0,535,.LM98-.LFBB25
 988               	.LM98:
 989 028c 1F5F      		subi r17,lo8(-(1))
 990               	.L33:
 533:main.c        ****   while (message[i] != '\0') {
 991               		.stabn	68,0,533,.LM99-.LFBB25
 992               	.LM99:
 993 028e FE01      		movw r30,r28
 994 0290 E10F      		add r30,r17
 995 0292 F11D      		adc r31,__zero_reg__
 996 0294 8081      		ld r24,Z
 997 0296 8823      		tst r24
 998 0298 01F4      		brne .L34
 536:main.c        ****   }
 537:main.c        ****   /* END message with cr,lf */
 538:main.c        ****   USART_debug_send(0x0d);
 999               		.stabn	68,0,538,.LM100-.LFBB25
 1000               	.LM100:
 1001 029a 8DE0      		ldi r24,lo8(13)
 1002 029c 0E94 0000 		call USART_debug_send
 539:main.c        ****   USART_debug_send(0x0a);
 1003               		.stabn	68,0,539,.LM101-.LFBB25
 1004               	.LM101:
 1005 02a0 8AE0      		ldi r24,lo8(10)
 1006 02a2 0E94 0000 		call USART_debug_send
 1007               	/* epilogue start */
 540:main.c        **** }
 1008               		.stabn	68,0,540,.LM102-.LFBB25
 1009               	.LM102:
 1010 02a6 DF91      		pop r29
 1011 02a8 CF91      		pop r28
 1012 02aa 1F91      		pop r17
 1013 02ac 0895      		ret
 1014               		.size	USART_debug_send_message, .-USART_debug_send_message
 1015               		.stabs	"i:r(9,2)",64,0,532,17
 1016               		.stabn	192,0,0,.LFBB25-.LFBB25
 1017               		.stabn	224,0,0,.Lscope25-.LFBB25
 1018               	.Lscope25:
 1019               		.stabs	"",36,0,0,.Lscope25-.LFBB25
 1020               		.stabd	78,0,0
 1021               		.stabs	"USART_debug_recv:F(0,15)",36,0,542,USART_debug_recv
 1022               		.stabs	"recv_byte:P(0,11)",64,0,542,24
 1023               	.global	USART_debug_recv
 1024               		.type	USART_debug_recv, @function
 1025               	USART_debug_recv:
 1026               		.stabd	46,0,0
 541:main.c        **** 
 542:main.c        **** void USART_debug_recv( unsigned char recv_byte ) {
 1027               		.stabn	68,0,542,.LM103-.LFBB26
 1028               	.LM103:
 1029               	.LFBB26:
 1030               	/* prologue: function */
 1031               	/* frame size = 0 */
 1032               	/* stack size = 0 */
 1033               	.L__stack_usage = 0
GAS LISTING /tmp/ccGIF4s8.s 			page 29


 543:main.c        **** 
 544:main.c        ****   /* Echo to the debug port */
 545:main.c        ****   USART_debug_send( recv_byte );
 1034               		.stabn	68,0,545,.LM104-.LFBB26
 1035               	.LM104:
 1036 02ae 0E94 0000 		call USART_debug_send
 1037               	/* epilogue start */
 546:main.c        **** }
 1038               		.stabn	68,0,546,.LM105-.LFBB26
 1039               	.LM105:
 1040 02b2 0895      		ret
 1041               		.size	USART_debug_recv, .-USART_debug_recv
 1042               	.Lscope26:
 1043               		.stabs	"",36,0,0,.Lscope26-.LFBB26
 1044               		.stabd	78,0,0
 1045               		.stabs	"__vector_19:F(0,15)",36,0,551,__vector_19
 1046               	.global	__vector_19
 1047               		.type	__vector_19, @function
 1048               	__vector_19:
 1049               		.stabd	46,0,0
 547:main.c        **** 
 548:main.c        **** /* Events */
 549:main.c        **** 
 550:main.c        **** /* USART bluetooth receive event */
 551:main.c        **** ISR ( USART0_RXC_vect ) {
 1050               		.stabn	68,0,551,.LM106-.LFBB27
 1051               	.LM106:
 1052               	.LFBB27:
 1053 02b4 1F92      		push __zero_reg__
 1054 02b6 0F92      		push r0
 1055 02b8 0FB6      		in r0,__SREG__
 1056 02ba 0F92      		push r0
 1057 02bc 1124      		clr __zero_reg__
 1058 02be 2F93      		push r18
 1059 02c0 3F93      		push r19
 1060 02c2 4F93      		push r20
 1061 02c4 5F93      		push r21
 1062 02c6 6F93      		push r22
 1063 02c8 7F93      		push r23
 1064 02ca 8F93      		push r24
 1065 02cc 9F93      		push r25
 1066 02ce AF93      		push r26
 1067 02d0 BF93      		push r27
 1068 02d2 EF93      		push r30
 1069 02d4 FF93      		push r31
 1070               	/* prologue: Signal */
 1071               	/* frame size = 0 */
 1072               	/* stack size = 15 */
 1073               	.L__stack_usage = 15
 552:main.c        ****   recv_byte = UDR0;
 1074               		.stabn	68,0,552,.LM107-.LFBB27
 1075               	.LM107:
 1076 02d6 8CB1      		in r24,44-32
 1077 02d8 8093 0000 		sts recv_byte,r24
 553:main.c        ****   USART_bluetooth_recv(recv_byte);
 1078               		.stabn	68,0,553,.LM108-.LFBB27
 1079               	.LM108:
GAS LISTING /tmp/ccGIF4s8.s 			page 30


 1080 02dc 0E94 0000 		call USART_bluetooth_recv
 1081               	/* epilogue start */
 554:main.c        **** }
 1082               		.stabn	68,0,554,.LM109-.LFBB27
 1083               	.LM109:
 1084 02e0 FF91      		pop r31
 1085 02e2 EF91      		pop r30
 1086 02e4 BF91      		pop r27
 1087 02e6 AF91      		pop r26
 1088 02e8 9F91      		pop r25
 1089 02ea 8F91      		pop r24
 1090 02ec 7F91      		pop r23
 1091 02ee 6F91      		pop r22
 1092 02f0 5F91      		pop r21
 1093 02f2 4F91      		pop r20
 1094 02f4 3F91      		pop r19
 1095 02f6 2F91      		pop r18
 1096 02f8 0F90      		pop r0
 1097 02fa 0FBE      		out __SREG__,r0
 1098 02fc 0F90      		pop r0
 1099 02fe 1F90      		pop __zero_reg__
 1100 0300 1895      		reti
 1101               		.size	__vector_19, .-__vector_19
 1102               	.Lscope27:
 1103               		.stabs	"",36,0,0,.Lscope27-.LFBB27
 1104               		.stabd	78,0,0
 1105               		.stabs	"__vector_20:F(0,15)",36,0,557,__vector_20
 1106               	.global	__vector_20
 1107               		.type	__vector_20, @function
 1108               	__vector_20:
 1109               		.stabd	46,0,0
 555:main.c        **** 
 556:main.c        **** /* USART debug receive event */
 557:main.c        **** ISR ( USART1_RXC_vect ) {
 1110               		.stabn	68,0,557,.LM110-.LFBB28
 1111               	.LM110:
 1112               	.LFBB28:
 1113 0302 1F92      		push __zero_reg__
 1114 0304 0F92      		push r0
 1115 0306 0FB6      		in r0,__SREG__
 1116 0308 0F92      		push r0
 1117 030a 1124      		clr __zero_reg__
 1118 030c 2F93      		push r18
 1119 030e 3F93      		push r19
 1120 0310 4F93      		push r20
 1121 0312 5F93      		push r21
 1122 0314 6F93      		push r22
 1123 0316 7F93      		push r23
 1124 0318 8F93      		push r24
 1125 031a 9F93      		push r25
 1126 031c AF93      		push r26
 1127 031e BF93      		push r27
 1128 0320 EF93      		push r30
 1129 0322 FF93      		push r31
 1130               	/* prologue: Signal */
 1131               	/* frame size = 0 */
 1132               	/* stack size = 15 */
GAS LISTING /tmp/ccGIF4s8.s 			page 31


 1133               	.L__stack_usage = 15
 558:main.c        ****   recv_byte = UDR1;
 1134               		.stabn	68,0,558,.LM111-.LFBB28
 1135               	.LM111:
 1136 0324 83B1      		in r24,35-32
 1137 0326 8093 0000 		sts recv_byte,r24
 1138               	.LBB6:
 1139               	.LBB7:
 545:main.c        ****   USART_debug_send( recv_byte );
 1140               		.stabn	68,0,545,.LM112-.LFBB28
 1141               	.LM112:
 1142 032a 0E94 0000 		call USART_debug_send
 1143               	/* epilogue start */
 1144               	.LBE7:
 1145               	.LBE6:
 559:main.c        ****   USART_debug_recv( recv_byte );
 560:main.c        **** }
 1146               		.stabn	68,0,560,.LM113-.LFBB28
 1147               	.LM113:
 1148 032e FF91      		pop r31
 1149 0330 EF91      		pop r30
 1150 0332 BF91      		pop r27
 1151 0334 AF91      		pop r26
 1152 0336 9F91      		pop r25
 1153 0338 8F91      		pop r24
 1154 033a 7F91      		pop r23
 1155 033c 6F91      		pop r22
 1156 033e 5F91      		pop r21
 1157 0340 4F91      		pop r20
 1158 0342 3F91      		pop r19
 1159 0344 2F91      		pop r18
 1160 0346 0F90      		pop r0
 1161 0348 0FBE      		out __SREG__,r0
 1162 034a 0F90      		pop r0
 1163 034c 1F90      		pop __zero_reg__
 1164 034e 1895      		reti
 1165               		.size	__vector_20, .-__vector_20
 1166               	.Lscope28:
 1167               		.stabs	"",36,0,0,.Lscope28-.LFBB28
 1168               		.stabd	78,0,0
 1169               		.stabs	"__vector_1:F(0,15)",36,0,565,__vector_1
 1170               	.global	__vector_1
 1171               		.type	__vector_1, @function
 1172               	__vector_1:
 1173               		.stabd	46,0,0
 561:main.c        **** 
 562:main.c        **** /**
 563:main.c        **** * Interrupts on ADC finish 
 564:main.c        **** **/
 565:main.c        **** ISR ( ADC_INTERRUPT_INT_VECTOR ) {
 1174               		.stabn	68,0,565,.LM114-.LFBB29
 1175               	.LM114:
 1176               	.LFBB29:
 1177 0350 1F92      		push __zero_reg__
 1178 0352 0F92      		push r0
 1179 0354 0FB6      		in r0,__SREG__
 1180 0356 0F92      		push r0
GAS LISTING /tmp/ccGIF4s8.s 			page 32


 1181 0358 1124      		clr __zero_reg__
 1182 035a 2F93      		push r18
 1183 035c 3F93      		push r19
 1184 035e 4F93      		push r20
 1185 0360 5F93      		push r21
 1186 0362 6F93      		push r22
 1187 0364 7F93      		push r23
 1188 0366 8F93      		push r24
 1189 0368 9F93      		push r25
 1190 036a AF93      		push r26
 1191 036c BF93      		push r27
 1192 036e EF93      		push r30
 1193 0370 FF93      		push r31
 1194               	/* prologue: Signal */
 1195               	/* frame size = 0 */
 1196               	/* stack size = 15 */
 1197               	.L__stack_usage = 15
 566:main.c        ****   ADC_read();
 1198               		.stabn	68,0,566,.LM115-.LFBB29
 1199               	.LM115:
 1200 0372 0E94 0000 		call ADC_read
 1201               	/* epilogue start */
 567:main.c        **** }
 1202               		.stabn	68,0,567,.LM116-.LFBB29
 1203               	.LM116:
 1204 0376 FF91      		pop r31
 1205 0378 EF91      		pop r30
 1206 037a BF91      		pop r27
 1207 037c AF91      		pop r26
 1208 037e 9F91      		pop r25
 1209 0380 8F91      		pop r24
 1210 0382 7F91      		pop r23
 1211 0384 6F91      		pop r22
 1212 0386 5F91      		pop r21
 1213 0388 4F91      		pop r20
 1214 038a 3F91      		pop r19
 1215 038c 2F91      		pop r18
 1216 038e 0F90      		pop r0
 1217 0390 0FBE      		out __SREG__,r0
 1218 0392 0F90      		pop r0
 1219 0394 1F90      		pop __zero_reg__
 1220 0396 1895      		reti
 1221               		.size	__vector_1, .-__vector_1
 1222               	.Lscope29:
 1223               		.stabs	"",36,0,0,.Lscope29-.LFBB29
 1224               		.stabd	78,0,0
 1225               		.stabs	"__vector_2:F(0,15)",36,0,572,__vector_2
 1226               	.global	__vector_2
 1227               		.type	__vector_2, @function
 1228               	__vector_2:
 1229               		.stabd	46,0,0
 568:main.c        **** 
 569:main.c        **** /**
 570:main.c        **** * RTS line request
 571:main.c        **** **/
 572:main.c        **** ISR( BLUETOOTH_RTS_INTERRUPT_VECTOR ) {
 1230               		.stabn	68,0,572,.LM117-.LFBB30
GAS LISTING /tmp/ccGIF4s8.s 			page 33


 1231               	.LM117:
 1232               	.LFBB30:
 1233 0398 1F92      		push __zero_reg__
 1234 039a 0F92      		push r0
 1235 039c 0FB6      		in r0,__SREG__
 1236 039e 0F92      		push r0
 1237 03a0 1124      		clr __zero_reg__
 1238 03a2 2F93      		push r18
 1239 03a4 3F93      		push r19
 1240 03a6 4F93      		push r20
 1241 03a8 5F93      		push r21
 1242 03aa 6F93      		push r22
 1243 03ac 7F93      		push r23
 1244 03ae 8F93      		push r24
 1245 03b0 9F93      		push r25
 1246 03b2 AF93      		push r26
 1247 03b4 BF93      		push r27
 1248 03b6 EF93      		push r30
 1249 03b8 FF93      		push r31
 1250               	/* prologue: Signal */
 1251               	/* frame size = 0 */
 1252               	/* stack size = 15 */
 1253               	.L__stack_usage = 15
 573:main.c        ****   d_output_low( BLUETOOTH_CTS_PIN );
 1254               		.stabn	68,0,573,.LM118-.LFBB30
 1255               	.LM118:
 1256 03ba 84E0      		ldi r24,lo8(4)
 1257 03bc 0E94 0000 		call d_output_low
 1258               	/* epilogue start */
 574:main.c        **** }
 1259               		.stabn	68,0,574,.LM119-.LFBB30
 1260               	.LM119:
 1261 03c0 FF91      		pop r31
 1262 03c2 EF91      		pop r30
 1263 03c4 BF91      		pop r27
 1264 03c6 AF91      		pop r26
 1265 03c8 9F91      		pop r25
 1266 03ca 8F91      		pop r24
 1267 03cc 7F91      		pop r23
 1268 03ce 6F91      		pop r22
 1269 03d0 5F91      		pop r21
 1270 03d2 4F91      		pop r20
 1271 03d4 3F91      		pop r19
 1272 03d6 2F91      		pop r18
 1273 03d8 0F90      		pop r0
 1274 03da 0FBE      		out __SREG__,r0
 1275 03dc 0F90      		pop r0
 1276 03de 1F90      		pop __zero_reg__
 1277 03e0 1895      		reti
 1278               		.size	__vector_2, .-__vector_2
 1279               	.Lscope30:
 1280               		.stabs	"",36,0,0,.Lscope30-.LFBB30
 1281               		.stabd	78,0,0
 1282               		.stabs	"delay_ms:F(0,15)",36,0,579,delay_ms
 1283               		.stabs	"ms:P(9,2)",64,0,579,24
 1284               	.global	delay_ms
 1285               		.type	delay_ms, @function
GAS LISTING /tmp/ccGIF4s8.s 			page 34


 1286               	delay_ms:
 1287               		.stabd	46,0,0
 575:main.c        **** 
 576:main.c        **** /**
 577:main.c        **** * Delay utility
 578:main.c        **** **/
 579:main.c        **** void delay_ms( uint8_t ms ) {
 1288               		.stabn	68,0,579,.LM120-.LFBB31
 1289               	.LM120:
 1290               	.LFBB31:
 1291 03e2 DF93      		push r29
 1292 03e4 CF93      		push r28
 1293 03e6 00D0      		rcall .
 1294 03e8 CDB7      		in r28,__SP_L__
 1295 03ea DEB7      		in r29,__SP_H__
 1296               	/* prologue: function */
 1297               	/* frame size = 2 */
 1298               	/* stack size = 4 */
 1299               	.L__stack_usage = 4
 580:main.c        ****   uint16_t delay_count = F_CPU / 14500;
 581:main.c        **** 
 582:main.c        ****   volatile uint16_t i;
 583:main.c        **** 
 584:main.c        ****   while ( ms != 0 ) {
 1300               		.stabn	68,0,584,.LM121-.LFBB31
 1301               	.LM121:
 1302 03ec 00C0      		rjmp .L41
 1303               	.L44:
 585:main.c        ****     for (i=0; i != delay_count; i++ );
 1304               		.stabn	68,0,585,.LM122-.LFBB31
 1305               	.LM122:
 1306 03ee 1A82      		std Y+2,__zero_reg__
 1307 03f0 1982      		std Y+1,__zero_reg__
 1308 03f2 00C0      		rjmp .L42
 1309               	.L43:
 1310               		.stabn	68,0,585,.LM123-.LFBB31
 1311               	.LM123:
 1312 03f4 2981      		ldd r18,Y+1
 1313 03f6 3A81      		ldd r19,Y+2
 1314 03f8 2F5F      		subi r18,lo8(-(1))
 1315 03fa 3F4F      		sbci r19,hi8(-(1))
 1316 03fc 3A83      		std Y+2,r19
 1317 03fe 2983      		std Y+1,r18
 1318               	.L42:
 1319               		.stabn	68,0,585,.LM124-.LFBB31
 1320               	.LM124:
 1321 0400 2981      		ldd r18,Y+1
 1322 0402 3A81      		ldd r19,Y+2
 1323 0404 2E36      		cpi r18,110
 1324 0406 3105      		cpc r19,__zero_reg__
 1325 0408 01F4      		brne .L43
 586:main.c        ****     ms--;
 1326               		.stabn	68,0,586,.LM125-.LFBB31
 1327               	.LM125:
 1328 040a 8150      		subi r24,lo8(-(-1))
 1329               	.L41:
 584:main.c        ****   while ( ms != 0 ) {
GAS LISTING /tmp/ccGIF4s8.s 			page 35


 1330               		.stabn	68,0,584,.LM126-.LFBB31
 1331               	.LM126:
 1332 040c 8823      		tst r24
 1333 040e 01F4      		brne .L44
 1334               	/* epilogue start */
 587:main.c        ****   }
 588:main.c        **** }
 1335               		.stabn	68,0,588,.LM127-.LFBB31
 1336               	.LM127:
 1337 0410 0F90      		pop __tmp_reg__
 1338 0412 0F90      		pop __tmp_reg__
 1339 0414 CF91      		pop r28
 1340 0416 DF91      		pop r29
 1341 0418 0895      		ret
 1342               		.size	delay_ms, .-delay_ms
 1343               		.stabs	"i:(0,17)=B(9,4)",128,0,582,1
 1344               		.stabn	192,0,0,.LFBB31-.LFBB31
 1345               		.stabn	224,0,0,.Lscope31-.LFBB31
 1346               	.Lscope31:
 1347               		.stabs	"",36,0,0,.Lscope31-.LFBB31
 1348               		.stabd	78,0,0
 1349               		.stabs	"USART_bluetooth_send_message:F(0,15)",36,0,464,USART_bluetooth_send_message
 1350               		.stabs	"message:P(0,16)",64,0,464,28
 1351               	.global	USART_bluetooth_send_message
 1352               		.type	USART_bluetooth_send_message, @function
 1353               	USART_bluetooth_send_message:
 1354               		.stabd	46,0,0
 464:main.c        **** void USART_bluetooth_send_message(char *message) {
 1355               		.stabn	68,0,464,.LM128-.LFBB32
 1356               	.LM128:
 1357               	.LFBB32:
 1358 041a 1F93      		push r17
 1359 041c CF93      		push r28
 1360 041e DF93      		push r29
 1361               	/* prologue: function */
 1362               	/* frame size = 0 */
 1363               	/* stack size = 3 */
 1364               	.L__stack_usage = 3
 1365 0420 EC01      		movw r28,r24
 466:main.c        ****   uint8_t i = 0;
 1366               		.stabn	68,0,466,.LM129-.LFBB32
 1367               	.LM129:
 1368 0422 10E0      		ldi r17,lo8(0)
 467:main.c        ****   while(message[i] != '\0') {
 1369               		.stabn	68,0,467,.LM130-.LFBB32
 1370               	.LM130:
 1371 0424 00C0      		rjmp .L46
 1372               	.L47:
 469:main.c        ****     USART_bluetooth_send(message[i]);
 1373               		.stabn	68,0,469,.LM131-.LFBB32
 1374               	.LM131:
 1375 0426 0E94 0000 		call USART_bluetooth_send
 470:main.c        ****     i = i + 1;
 1376               		.stabn	68,0,470,.LM132-.LFBB32
 1377               	.LM132:
 1378 042a 1F5F      		subi r17,lo8(-(1))
 471:main.c        ****     delay_ms(1);
GAS LISTING /tmp/ccGIF4s8.s 			page 36


 1379               		.stabn	68,0,471,.LM133-.LFBB32
 1380               	.LM133:
 1381 042c 81E0      		ldi r24,lo8(1)
 1382 042e 0E94 0000 		call delay_ms
 1383               	.L46:
 467:main.c        ****   while(message[i] != '\0') {
 1384               		.stabn	68,0,467,.LM134-.LFBB32
 1385               	.LM134:
 1386 0432 FE01      		movw r30,r28
 1387 0434 E10F      		add r30,r17
 1388 0436 F11D      		adc r31,__zero_reg__
 1389 0438 8081      		ld r24,Z
 1390 043a 8823      		tst r24
 1391 043c 01F4      		brne .L47
 474:main.c        ****   USART_bluetooth_send(0x0d);
 1392               		.stabn	68,0,474,.LM135-.LFBB32
 1393               	.LM135:
 1394 043e 8DE0      		ldi r24,lo8(13)
 1395 0440 0E94 0000 		call USART_bluetooth_send
 1396               	/* epilogue start */
 476:main.c        **** }
 1397               		.stabn	68,0,476,.LM136-.LFBB32
 1398               	.LM136:
 1399 0444 DF91      		pop r29
 1400 0446 CF91      		pop r28
 1401 0448 1F91      		pop r17
 1402 044a 0895      		ret
 1403               		.size	USART_bluetooth_send_message, .-USART_bluetooth_send_message
 1404               		.stabs	"i:r(9,2)",64,0,466,17
 1405               		.stabn	192,0,0,.LFBB32-.LFBB32
 1406               		.stabn	224,0,0,.Lscope32-.LFBB32
 1407               	.Lscope32:
 1408               		.stabs	"",36,0,0,.Lscope32-.LFBB32
 1409               		.stabd	78,0,0
 1410               		.data
 1411               	.LC0:
 1412 0000 4154 2B56 		.string	"AT+VER"
 1412      4552 00
 1413               		.text
 1414               		.stabs	"USART_bluetooth_check_alive:F(0,15)",36,0,405,USART_bluetooth_check_alive
 1415               	.global	USART_bluetooth_check_alive
 1416               		.type	USART_bluetooth_check_alive, @function
 1417               	USART_bluetooth_check_alive:
 1418               		.stabd	46,0,0
 405:main.c        **** void USART_bluetooth_check_alive() {
 1419               		.stabn	68,0,405,.LM137-.LFBB33
 1420               	.LM137:
 1421               	.LFBB33:
 1422               	/* prologue: function */
 1423               	/* frame size = 0 */
 1424               	/* stack size = 0 */
 1425               	.L__stack_usage = 0
 410:main.c        ****   USART_bluetooth_send_message("AT+VER");
 1426               		.stabn	68,0,410,.LM138-.LFBB33
 1427               	.LM138:
 1428 044c 80E0      		ldi r24,lo8(.LC0)
 1429 044e 90E0      		ldi r25,hi8(.LC0)
GAS LISTING /tmp/ccGIF4s8.s 			page 37


 1430 0450 0E94 0000 		call USART_bluetooth_send_message
 1431               	/* epilogue start */
 411:main.c        **** }
 1432               		.stabn	68,0,411,.LM139-.LFBB33
 1433               	.LM139:
 1434 0454 0895      		ret
 1435               		.size	USART_bluetooth_check_alive, .-USART_bluetooth_check_alive
 1436               	.Lscope33:
 1437               		.stabs	"",36,0,0,.Lscope33-.LFBB33
 1438               		.stabd	78,0,0
 1439               		.stabs	"ADC_start:F(0,15)",36,0,281,ADC_start
 1440               	.global	ADC_start
 1441               		.type	ADC_start, @function
 1442               	ADC_start:
 1443               		.stabd	46,0,0
 281:main.c        **** void ADC_start() {
 1444               		.stabn	68,0,281,.LM140-.LFBB34
 1445               	.LM140:
 1446               	.LFBB34:
 1447               	/* prologue: function */
 1448               	/* frame size = 0 */
 1449               	/* stack size = 0 */
 1450               	.L__stack_usage = 0
 284:main.c        ****   c_output_low( CONVST );
 1451               		.stabn	68,0,284,.LM141-.LFBB34
 1452               	.LM141:
 1453 0456 83E0      		ldi r24,lo8(3)
 1454 0458 0E94 0000 		call c_output_low
 288:main.c        ****   c_output_high( PD );
 1455               		.stabn	68,0,288,.LM142-.LFBB34
 1456               	.LM142:
 1457 045c 80E0      		ldi r24,lo8(0)
 1458 045e 0E94 0000 		call c_output_high
 290:main.c        ****   c_output_high( CS );
 1459               		.stabn	68,0,290,.LM143-.LFBB34
 1460               	.LM143:
 1461 0462 82E0      		ldi r24,lo8(2)
 1462 0464 0E94 0000 		call c_output_high
 292:main.c        ****   c_output_high( RD );
 1463               		.stabn	68,0,292,.LM144-.LFBB34
 1464               	.LM144:
 1465 0468 81E0      		ldi r24,lo8(1)
 1466 046a 0E94 0000 		call c_output_high
 294:main.c        ****   c_output_low( CONVST );
 1467               		.stabn	68,0,294,.LM145-.LFBB34
 1468               	.LM145:
 1469 046e 83E0      		ldi r24,lo8(3)
 1470 0470 0E94 0000 		call c_output_low
 297:main.c        ****   c_output_high( CONVST );
 1471               		.stabn	68,0,297,.LM146-.LFBB34
 1472               	.LM146:
 1473 0474 83E0      		ldi r24,lo8(3)
 1474 0476 0E94 0000 		call c_output_high
 298:main.c        ****   delay_ms(10); /* t_power-up */
 1475               		.stabn	68,0,298,.LM147-.LFBB34
 1476               	.LM147:
 1477 047a 8AE0      		ldi r24,lo8(10)
GAS LISTING /tmp/ccGIF4s8.s 			page 38


 1478 047c 0E94 0000 		call delay_ms
 300:main.c        ****   c_output_low( CONVST );
 1479               		.stabn	68,0,300,.LM148-.LFBB34
 1480               	.LM148:
 1481 0480 83E0      		ldi r24,lo8(3)
 1482 0482 0E94 0000 		call c_output_low
 1483               	/* epilogue start */
 302:main.c        **** }
 1484               		.stabn	68,0,302,.LM149-.LFBB34
 1485               	.LM149:
 1486 0486 0895      		ret
 1487               		.size	ADC_start, .-ADC_start
 1488               	.Lscope34:
 1489               		.stabs	"",36,0,0,.Lscope34-.LFBB34
 1490               		.stabd	78,0,0
 1491               		.stabs	"debug_init:F(0,15)",36,0,593,debug_init
 1492               	.global	debug_init
 1493               		.type	debug_init, @function
 1494               	debug_init:
 1495               		.stabd	46,0,0
 589:main.c        **** 
 590:main.c        **** /**
 591:main.c        **** * Initialization of debug pins
 592:main.c        **** **/
 593:main.c        **** void debug_init() {
 1496               		.stabn	68,0,593,.LM150-.LFBB35
 1497               	.LM150:
 1498               	.LFBB35:
 1499               	/* prologue: function */
 1500               	/* frame size = 0 */
 1501               	/* stack size = 0 */
 1502               	.L__stack_usage = 0
 594:main.c        ****   
 595:main.c        ****   /* Set debug output pin as output */
 596:main.c        ****   b_set_output( DEBUG_OUTPUT_PIN );
 1503               		.stabn	68,0,596,.LM151-.LFBB35
 1504               	.LM151:
 1505 0488 80E0      		ldi r24,lo8(0)
 1506 048a 0E94 0000 		call b_set_output
 597:main.c        ****   /* Set debug interrupt pin as output */
 598:main.c        ****   b_set_output( DEBUG_INTERRUPT_PIN );
 1507               		.stabn	68,0,598,.LM152-.LFBB35
 1508               	.LM152:
 1509 048e 81E0      		ldi r24,lo8(1)
 1510 0490 0E94 0000 		call b_set_output
 599:main.c        ****   /* Set debug data pin as output */
 600:main.c        ****   b_set_output( DEBUG_DATA_PIN );
 1511               		.stabn	68,0,600,.LM153-.LFBB35
 1512               	.LM153:
 1513 0494 84E0      		ldi r24,lo8(4)
 1514 0496 0E94 0000 		call b_set_output
 601:main.c        **** 
 602:main.c        ****   /* Set debug output pin as low */
 603:main.c        ****   b_output_low( DEBUG_OUTPUT_PIN );
 1515               		.stabn	68,0,603,.LM154-.LFBB35
 1516               	.LM154:
 1517 049a 80E0      		ldi r24,lo8(0)
GAS LISTING /tmp/ccGIF4s8.s 			page 39


 1518 049c 0E94 0000 		call b_output_low
 604:main.c        ****   /* Set debug interrupt pin as low */
 605:main.c        ****   b_output_low( DEBUG_INTERRUPT_PIN );
 1519               		.stabn	68,0,605,.LM155-.LFBB35
 1520               	.LM155:
 1521 04a0 81E0      		ldi r24,lo8(1)
 1522 04a2 0E94 0000 		call b_output_low
 606:main.c        ****   /* Set debug data pin as low */
 607:main.c        ****   b_output_low( DEBUG_DATA_PIN );
 1523               		.stabn	68,0,607,.LM156-.LFBB35
 1524               	.LM156:
 1525 04a6 84E0      		ldi r24,lo8(4)
 1526 04a8 0E94 0000 		call b_output_low
 1527               	/* epilogue start */
 608:main.c        **** }
 1528               		.stabn	68,0,608,.LM157-.LFBB35
 1529               	.LM157:
 1530 04ac 0895      		ret
 1531               		.size	debug_init, .-debug_init
 1532               	.Lscope35:
 1533               		.stabs	"",36,0,0,.Lscope35-.LFBB35
 1534               		.stabd	78,0,0
 1535               		.data
 1536               	.LC1:
 1537 0007 4154 2B45 		.string	"AT+ENQ"
 1537      4E51 00
 1538               		.text
 1539               		.stabs	"main:F(0,1)",36,0,159,main
 1540               	.global	main
 1541               		.type	main, @function
 1542               	main:
 1543               		.stabd	46,0,0
 159:main.c        **** int main() {
 1544               		.stabn	68,0,159,.LM158-.LFBB36
 1545               	.LM158:
 1546               	.LFBB36:
 1547               	/* prologue: function */
 1548               	/* frame size = 0 */
 1549               	/* stack size = 0 */
 1550               	.L__stack_usage = 0
 1551               	.LBB8:
 1552               	.LBB9:
 1553               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h",132,0,0,.Ltext1
 1554               	.Ltext1:
   1:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* Copyright (c) 2006, 2007, 2008  Eric B. Weddington
   2:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****    All rights reserved.
   3:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
   4:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
   7:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****    * Redistributions in binary form must reproduce the above copyright
  10:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****      notice, this list of conditions and the following disclaimer in
  11:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****      the documentation and/or other materials provided with the
  12:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****      distribution.
  13:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****    * Neither the name of the copyright holders nor the names of
GAS LISTING /tmp/ccGIF4s8.s 			page 40


  14:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****      contributors may be used to endorse or promote products derived
  15:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****      from this software without specific prior written permission.
  16:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  17:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  18:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  19:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  20:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  21:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  22:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  23:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  24:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  25:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  26:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  27:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   POSSIBILITY OF SUCH DAMAGE. */
  28:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  29:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* $Id: power.h 2213 2011-02-16 08:44:23Z aboyapati $ */
  30:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  31:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #ifndef _AVR_POWER_H_
  32:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define _AVR_POWER_H_   1
  33:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  34:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #include <avr/io.h>
  35:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #include <stdint.h>
  36:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  37:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  38:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /** \file */
  39:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /** \defgroup avr_power <avr/power.h>: Power Reduction Management
  40:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  41:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** \code #include <avr/power.h>\endcode
  42:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  43:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** Many AVRs contain a Power Reduction Register (PRR) or Registers (PRRx) that 
  44:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** allow you to reduce power consumption by disabling or enabling various on-board 
  45:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** peripherals as needed.
  46:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  47:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** There are many macros in this header file that provide an easy interface
  48:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** to enable or disable on-board peripherals to reduce power. See the table below.
  49:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  50:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** \note Not all AVR devices have a Power Reduction Register (for example
  51:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** the ATmega128). On those devices without a Power Reduction Register, these 
  52:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** macros are not available.
  53:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  54:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** \note Not all AVR devices contain the same peripherals (for example, the LCD
  55:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** interface), or they will be named differently (for example, USART and 
  56:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** USART0). Please consult your device's datasheet, or the header file, to 
  57:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** find out which macros are applicable to your device.
  58:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  59:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** */
  60:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  61:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  62:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /** \addtogroup avr_power
  63:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  64:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** \anchor avr_powermacros
  65:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** <small>
  66:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** <center>
  67:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** <table border="3">
  68:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
  69:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td width="10%"><strong>Power Macro</strong></td>
  70:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td width="15%"><strong>Description</strong></td>
GAS LISTING /tmp/ccGIF4s8.s 			page 41


  71:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td width="75%"><strong>Applicable for device</strong></td>
  72:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
  73:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  74:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
  75:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_adc_enable()</td>
  76:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Analog to Digital Converter module.</td>
  77:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
  78:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
  79:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  80:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
  81:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_adc_disable()</td>
  82:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Analog to Digital Converter module.</td>
  83:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
  84:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
  85:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  86:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
  87:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_lcd_enable()</td>
  88:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the LCD module.</td>
  89:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega169, ATmega169P, ATmega329, ATmega329A, ATmega3290, ATmega3290A, ATmega649, ATmega649
  90:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
  91:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  92:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
  93:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_lcd_disable().</td>
  94:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the LCD module.</td>
  95:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega169, ATmega169P, ATmega329, ATmega329A, ATmega3290, ATmega3290A, ATmega649, ATmega649
  96:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
  97:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
  98:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
  99:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_pscr_enable()</td>
 100:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Reduced Power Stage Controller module.</td>
 101:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>AT90PWM81</td>
 102:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 103:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 104:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 105:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_pscr_disable()</td>
 106:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Reduced Power Stage Controller module.</td>
 107:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>AT90PWM81</td>
 108:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 109:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 110:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 111:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_psc0_enable()</td>
 112:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Power Stage Controller 0 module.</td>
 113:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 114:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 115:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 116:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 117:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_psc0_disable()</td>
 118:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Power Stage Controller 0 module.</td>
 119:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 120:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 121:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 122:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 123:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_psc1_enable()</td>
 124:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Power Stage Controller 1 module.</td>
 125:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 126:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 127:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
GAS LISTING /tmp/ccGIF4s8.s 			page 42


 128:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 129:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_psc1_disable()</td>
 130:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Power Stage Controller 1 module.</td>
 131:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 132:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 133:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 134:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 135:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_psc2_enable()</td>
 136:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Power Stage Controller 2 module.</td>
 137:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM81</td>
 138:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 139:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 140:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 141:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_psc2_disable()</td>
 142:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Power Stage Controller 2 module.</td>
 143:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM81</td>
 144:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 145:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 146:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 147:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_spi_enable()</td>
 148:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Serial Peripheral Interface module.</td>
 149:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 150:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 151:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 152:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 153:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_spi_disable()</td>
 154:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Serial Peripheral Interface module.</td>
 155:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 156:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 157:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 158:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 159:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_timer0_enable()</td>
 160:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Timer 0 module.</td>
 161:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 162:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 163:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 164:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 165:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_timer0_disable()</td>
 166:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Timer 0 module.</td>
 167:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 168:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 169:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 170:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 171:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_timer1_enable()</td>
 172:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Timer 1 module.</td>
 173:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 174:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 175:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 176:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 177:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_timer1_disable()</td>
 178:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Timer 1 module.</td>
 179:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 180:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 181:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 182:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 183:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_timer2_enable()</td>
 184:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Timer 2 module.</td>
GAS LISTING /tmp/ccGIF4s8.s 			page 43


 185:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 186:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 187:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 188:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 189:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_timer2_disable()</td>
 190:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Timer 2 module.</td>
 191:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 192:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 193:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 194:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 195:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_timer3_enable()</td>
 196:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Timer 3 module.</td>
 197:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 198:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 199:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 200:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 201:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_timer3_disable()</td>
 202:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Timer 3 module.</td>
 203:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 204:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 205:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 206:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 207:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_timer4_enable()</td>
 208:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Timer 4 module.</td>
 209:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561</td>
 210:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 211:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 212:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 213:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_timer4_disable()</td>
 214:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Timer 4 module.</td>
 215:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561</td>
 216:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 217:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 218:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 219:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_timer5_enable()</td>
 220:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Timer 5 module.</td>
 221:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561</td>
 222:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 223:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 224:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 225:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_timer5_disable()</td>
 226:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Timer 5 module.</td>
 227:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561</td>
 228:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 229:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 230:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 231:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_twi_enable()</td>
 232:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Two Wire Interface module.</td>
 233:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 234:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 235:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 236:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 237:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_twi_disable()</td>
 238:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Two Wire Interface module.</td>
 239:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 240:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 241:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
GAS LISTING /tmp/ccGIF4s8.s 			page 44


 242:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 243:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usart_enable()</td>
 244:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the USART module.</td>
 245:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 246:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 247:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 248:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 249:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usart_disable()</td>
 250:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the USART module.</td>
 251:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 252:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 253:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 254:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 255:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usart0_enable()</td>
 256:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the USART 0 module.</td>
 257:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, ATmega165, ATmega
 258:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 259:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 260:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 261:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usart0_disable()</td>
 262:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the USART 0 module.</td>
 263:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, ATmega165, ATmega
 264:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 265:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 266:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 267:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usart1_enable()</td>
 268:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the USART 1 module.</td>
 269:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 270:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 271:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 272:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 273:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usart1_disable()</td>
 274:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the USART 1 module.</td>
 275:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 276:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 277:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 278:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 279:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usart2_enable()</td>
 280:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the USART 2 module.</td>
 281:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 282:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 283:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 284:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 285:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usart2_disable()</td>
 286:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the USART 2 module.</td>
 287:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 288:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 289:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 290:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 291:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usart3_enable()</td>
 292:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the USART 3 module.</td>
 293:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 294:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 295:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 296:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 297:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usart3_disable()</td>
 298:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the USART 3 module.</td>
GAS LISTING /tmp/ccGIF4s8.s 			page 45


 299:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 300:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 301:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 302:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 303:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usb_enable()</td>
 304:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the USB module.</td>
 305:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>AT90USB646, AT90USB647, AT90USB1286, AT90USB1287</td>
 306:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 307:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 308:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 309:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usb_disable()</td>
 310:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the USB module.</td>
 311:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>AT90USB646, AT90USB647, AT90USB1286, AT90USB1287</td>
 312:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 313:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 314:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 315:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usi_enable()</td>
 316:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Universal Serial Interface module.</td>
 317:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATtiny24, ATtiny44, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85, ATtiny261, ATtiny461
 318:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 319:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 320:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 321:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_usi_disable()</td>
 322:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Universal Serial Interface module.</td>
 323:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATtiny24, ATtiny44, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85, ATtiny261, ATtiny461
 324:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 325:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 326:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 327:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_vadc_enable()</td>
 328:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable the Voltage ADC module.</td>
 329:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega406</td>
 330:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 331:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 332:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 333:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_vadc_disable()</td>
 334:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable the Voltage ADC module.</td>
 335:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATmega406</td>
 336:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 337:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 338:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 339:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_all_enable()</td>
 340:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Enable all modules.</td>
 341:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATxmega6A4, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3, ATxmegaA1, ATxmegaA1U, ATx
 342:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 343:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 344:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   <tr>
 345:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>power_all_disable()</td>
 346:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>Disable all modules.</td>
 347:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     <td>ATxmega6A4, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3, ATxmegaA1, ATxmegaA1U, ATx
 348:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****   </tr>
 349:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** </table>
 350:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** </center>
 351:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** </small>
 352:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 353:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** @} */
 354:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 355:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** // Xmega A series has AES, EBI and DMA bits
GAS LISTING /tmp/ccGIF4s8.s 			page 46


 356:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** // Include any other device on need basis
 357:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #if defined(__AVR_ATxmega16A4__) \
 358:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega32A4__) \
 359:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1__) \
 360:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1U__) \
 361:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64A3__) \
 362:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1__) \
 363:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1U__) \
 364:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128A3__) \
 365:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega192A3__) \
 366:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3__) \
 367:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3B__)
 368:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 369:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
 370:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
 371:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 372:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_ebi_enable()  (PR_PRGEN &= (uint8_t)~(PR_EBI_bm))
 373:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_ebi_disable() (PR_PRGEN |= (uint8_t)PR_EBI_bm)
 374:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 375:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
 376:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
 377:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 378:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_daca_enable()     (PR_PRPA &= (uint8_t)~(PR_DAC_bm))
 379:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_daca_disable()    (PR_PRPA |= (uint8_t)PR_DAC_bm)
 380:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_dacb_enable()     (PR_PRPB &= (uint8_t)~(PR_DAC_bm))
 381:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_dacb_disable()    (PR_PRPB |= (uint8_t)PR_DAC_bm)
 382:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 383:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
 384:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
 385:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usartd1_enable()  (PR_PRPD &= (uint8_t)~(PR_USART1_bm))
 386:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usartd1_disable() (PR_PRPD |= (uint8_t)PR_USART1_bm)
 387:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usarte1_enable()  (PR_PRPE &= (uint8_t)~(PR_USART1_bm))
 388:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usarte1_disable() (PR_PRPE |= (uint8_t)PR_USART1_bm)
 389:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usartf1_enable()  (PR_PRPF &= (uint8_t)~(PR_USART1_bm))
 390:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usartf1_disable() (PR_PRPF |= (uint8_t)PR_USART1_bm)
 391:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 392:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable() \
 393:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do { \
 394:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
 395:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 396:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 397:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 398:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 399:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 400:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 401:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** } while(0)
 402:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 403:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 404:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable() \
 405:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do { \
 406:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRGEN|= (uint8_t)(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
 407:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 408:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 409:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 410:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 411:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 412:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
GAS LISTING /tmp/ccGIF4s8.s 			page 47


 413:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #endif
 414:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 415:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #if defined(__AVR_ATxmega16A4__) \
 416:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega16D4__) \
 417:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega32A4__) \
 418:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega32D4__) \
 419:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1__) \
 420:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1U__) \
 421:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64A3__) \
 422:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64D3__) \
 423:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1__) \
 424:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1U__) \
 425:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128A3__) \
 426:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128D3__) \
 427:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega192A3__) \
 428:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega192D3__) \
 429:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3__) \
 430:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3B__)
 431:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 432:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 433:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
 434:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
 435:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 436:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
 437:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
 438:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 439:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
 440:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
 441:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
 442:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
 443:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 444:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
 445:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
 446:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
 447:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
 448:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 449:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
 450:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
 451:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twid_enable()     (PR_PRPD &= (uint8_t)~(PR_TWI_bm))
 452:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twid_disable()    (PR_PRPD |= (uint8_t)PR_TWI_bm)
 453:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
 454:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
 455:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twif_enable()     (PR_PRPF &= (uint8_t)~(PR_TWI_bm))
 456:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twif_disable()    (PR_PRPF |= (uint8_t)PR_TWI_bm)
 457:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 458:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
 459:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
 460:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
 461:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
 462:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
 463:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
 464:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
 465:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
 466:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 467:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
 468:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
 469:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
GAS LISTING /tmp/ccGIF4s8.s 			page 48


 470:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
 471:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spie_enable()     (PR_PRPE &= (uint8_t)~(PR_SPI_bm))
 472:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spie_disable()    (PR_PRPE |= (uint8_t)PR_SPI_bm)
 473:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spif_enable()     (PR_PRPF &= (uint8_t)~(PR_SPI_bm))
 474:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spif_disable()    (PR_PRPF |= (uint8_t)PR_SPI_bm)
 475:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 476:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
 477:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
 478:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_hiresd_enable()   (PR_PRPD &= (uint8_t)~(PR_HIRES_bm))
 479:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_hiresd_disable()  (PR_PRPD |= (uint8_t)PR_HIRES_bm)
 480:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_hirese_enable()   (PR_PRPE &= (uint8_t)~(PR_HIRES_bm))
 481:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_hirese_disable()  (PR_PRPE |= (uint8_t)PR_HIRES_bm)
 482:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_hiresf_enable()   (PR_PRPF &= (uint8_t)~(PR_HIRES_bm))
 483:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_hiresf_disable()  (PR_PRPF |= (uint8_t)PR_HIRES_bm)
 484:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 485:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
 486:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
 487:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc1d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC1_bm))
 488:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc1d_disable()    (PR_PRPD |= (uint8_t)PR_TC1_bm)
 489:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc1e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC1_bm))
 490:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc1e_disable()    (PR_PRPE |= (uint8_t)PR_TC1_bm)
 491:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc1f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC1_bm))
 492:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc1f_disable()    (PR_PRPF |= (uint8_t)PR_TC1_bm)
 493:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 494:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
 495:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
 496:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
 497:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
 498:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
 499:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
 500:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
 501:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
 502:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 503:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #endif
 504:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 505:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #if defined(__AVR_ATxmega16D4__) \
 506:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega32D4__) \
 507:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega64D3__) \
 508:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega128D3__) \
 509:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATxmega192D3__) 
 510:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 511:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable() \
 512:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do { \
 513:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm); \
 514:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
 515:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPB &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
 516:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 517:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 518:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 519:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 520:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** } while(0)
 521:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 522:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 523:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable() \
 524:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do { \
 525:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRGEN|= (uint8_t)(PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
 526:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
GAS LISTING /tmp/ccGIF4s8.s 			page 49


 527:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPB |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
 528:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|R_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 529:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 530:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 531:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 532:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** } while(0)
 533:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 534:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #endif
 535:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 536:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega640__) \
 537:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega1280__) \
 538:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega1281__) \
 539:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega2560__) \
 540:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega2561__) 
 541:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 542:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 543:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 544:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 545:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 546:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 547:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 548:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 549:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 550:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 551:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 552:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 553:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 554:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 555:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 556:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 557:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 558:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 559:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 560:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 561:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 562:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 563:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
 564:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
 565:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 566:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
 567:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
 568:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 569:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 570:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 571:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 572:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 573:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 574:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 575:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart2_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART2))
 576:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart2_disable()  (PRR1 |= (uint8_t)(1 << PRUSART2))
 577:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 578:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart3_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART3))
 579:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart3_disable()  (PRR1 |= (uint8_t)(1 << PRUSART3))
 580:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 581:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable() \
 582:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
 583:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
GAS LISTING /tmp/ccGIF4s8.s 			page 50


 584:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|
 585:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
 586:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 587:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable() \
 588:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
 589:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
 590:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|(
 591:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
 592:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 593:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 594:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega128RFA1__)
 595:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 596:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 597:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 598:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 599:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 600:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 601:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 602:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 603:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 604:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 605:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 606:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 607:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 608:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 609:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 610:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 611:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 612:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 613:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 614:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 615:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 616:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 617:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
 618:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
 619:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 620:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
 621:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
 622:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 623:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 624:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 625:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 626:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 627:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 628:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 629:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable() \
 630:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
 631:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
 632:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
 633:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
 634:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 635:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable() \
 636:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
 637:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
 638:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
 639:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
 640:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
GAS LISTING /tmp/ccGIF4s8.s 			page 51


 641:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 642:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_AT90USB646__) \
 643:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB647__) \
 644:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB1286__) \
 645:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB1287__)
 646:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 647:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 648:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 649:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 650:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 651:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 652:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 653:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 654:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 655:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 656:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 657:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 658:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 659:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 660:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 661:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 662:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 663:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 664:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 665:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 666:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 667:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 668:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 669:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 670:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 671:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
 672:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
 673:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 674:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable() \
 675:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
 676:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
 677:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 678:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
 679:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 680:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable() \
 681:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
 682:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
 683:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 684:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
 685:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 686:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 687:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega32U4__) \
 688:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16U4__)
 689:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 690:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 691:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 692:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 693:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 694:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 695:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 696:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 697:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
GAS LISTING /tmp/ccGIF4s8.s 			page 52


 698:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 699:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 700:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 701:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 702:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 703:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 704:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 705:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 706:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 707:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 708:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 709:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 710:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 711:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 712:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 713:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 714:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 715:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 716:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 717:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 718:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
 719:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
 720:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 721:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable() \
 722:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
 723:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<P
 724:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 725:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
 726:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 727:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable() \
 728:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
 729:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PR
 730:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 731:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
 732:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 733:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 734:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega32U6__)
 735:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 736:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 737:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 738:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 739:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 740:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 741:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 742:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 743:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 744:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 745:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 746:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 747:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 748:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 749:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 750:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 751:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 752:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 753:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 754:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
GAS LISTING /tmp/ccGIF4s8.s 			page 53


 755:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 756:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 757:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 758:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 759:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 760:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 761:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
 762:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
 763:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 764:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable() \
 765:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
 766:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
 767:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 768:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
 769:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 770:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable() \
 771:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
 772:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
 773:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 774:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
 775:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 776:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 777:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_AT90PWM1__)
 778:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 779:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 780:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 781:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 782:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 783:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 784:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 785:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
 786:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
 787:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 788:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 789:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 790:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 791:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* Power Stage Controller 0 */
 792:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
 793:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
 794:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 795:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* Power Stage Controller 1 */
 796:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
 797:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
 798:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 799:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* Power Stage Controller 2 */
 800:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
 801:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
 802:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 803:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
 804:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
 805:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 806:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 807:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_AT90PWM2__) \
 808:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM2B__) \
 809:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM3__) \
 810:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM3B__) \
 811:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM216__) \
GAS LISTING /tmp/ccGIF4s8.s 			page 54


 812:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM316__)
 813:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 814:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 815:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 816:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 817:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 818:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 819:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 820:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart_enable()    (PRR &= (uint8_t)~(1 << PRUSART))
 821:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart_disable()   (PRR |= (uint8_t)(1 << PRUSART))
 822:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 823:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
 824:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
 825:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 826:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 827:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 828:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 829:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* Power Stage Controller 0 */
 830:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
 831:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
 832:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 833:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* Power Stage Controller 1 */
 834:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
 835:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
 836:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 837:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* Power Stage Controller 2 */
 838:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
 839:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
 840:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 841:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(
 842:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(1
 843:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 844:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 845:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_AT90PWM81__)
 846:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 847:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 848:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 849:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 850:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 851:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 852:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 853:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 854:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 855:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 856:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* Reduced Power Stage Controller */
 857:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_pscr_enable()     (PRR &= (uint8_t)~(1 << PRPSCR))
 858:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_pscr_disable()    (PRR |= (uint8_t)(1 << PRPSCR))
 859:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 860:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* Power Stage Controller 2 */
 861:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
 862:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
 863:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 864:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1
 865:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1<
 866:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 867:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 868:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega165__) \
GAS LISTING /tmp/ccGIF4s8.s 			page 55


 869:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega165A__) \
 870:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega165P__) \
 871:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega325__) \
 872:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega325A__) \
 873:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3250__) \
 874:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3250A__) \
 875:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega645__) \
 876:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega645A__) \
 877:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega645P__) \
 878:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6450__) \
 879:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6450A__) \
 880:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6450P__)
 881:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 882:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 883:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 884:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 885:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 886:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 887:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 888:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
 889:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
 890:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 891:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 892:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 893:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 894:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1))
 895:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)))
 896:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 897:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 898:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega169__) \
 899:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169A__) \
 900:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169P__) \
 901:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169PA__) \
 902:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329__) \
 903:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329A__) \
 904:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329P__) \
 905:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329PA__) \
 906:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3290__) \
 907:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3290A__) \
 908:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3290P__) \
 909:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega649__) \
 910:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega649A__) \
 911:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega649P__) \
 912:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6490__) \
 913:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6490A__) \
 914:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6490P__)
 915:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 916:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 917:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 918:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 919:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 920:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 921:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 922:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
 923:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
 924:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 925:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
GAS LISTING /tmp/ccGIF4s8.s 			page 56


 926:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 927:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 928:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_lcd_enable()      (PRR &= (uint8_t)~(1 << PRLCD))
 929:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_lcd_disable()     (PRR |= (uint8_t)(1 << PRLCD))
 930:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 931:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|
 932:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|(
 933:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 934:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 935:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega164A__) \
 936:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega164P__) \
 937:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega324A__) \
 938:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega324P__) \
 939:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega324PA__) \
 940:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644P__) \
 941:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644A__) \
 942:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644PA__)
 943:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 944:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 945:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 946:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 947:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 948:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 949:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 950:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 951:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 952:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 953:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
 954:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
 955:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 956:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 957:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 958:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 959:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 960:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 961:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 962:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 963:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 964:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 965:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 966:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 967:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 968:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART
 969:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1
 970:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 971:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 972:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega644__)
 973:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 974:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 975:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 976:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 977:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 978:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 979:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 980:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 981:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 982:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
GAS LISTING /tmp/ccGIF4s8.s 			page 57


 983:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 984:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 985:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 986:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 987:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 988:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 989:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 990:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 991:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 992:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 993:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 994:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 995:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)
 996:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
 997:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 998:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
 999:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega406__)
1000:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1001:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1002:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1003:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1004:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1005:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1006:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1007:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1008:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1009:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1010:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* Voltage ADC */
1011:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
1012:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
1013:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1014:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC))
1015:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)))
1016:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1017:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1018:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega48__) \
1019:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega48A__) \
1020:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega48P__) \
1021:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega88__) \
1022:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega88A__) \
1023:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega88P__) \
1024:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega88PA__) \
1025:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega168__) \
1026:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega168A__) \
1027:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega168P__) \
1028:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega328__) \
1029:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega328P__) \
1030:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny48__) \
1031:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny88__)
1032:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1033:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1034:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1035:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1036:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1037:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1038:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1039:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
GAS LISTING /tmp/ccGIF4s8.s 			page 58


1040:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
1041:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1042:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1043:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1044:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1045:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1046:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1047:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1048:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR &= (uint8_t)~(1 << PRTIM2))
1049:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR |= (uint8_t)(1 << PRTIM2))
1050:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1051:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
1052:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
1053:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1054:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
1055:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
1056:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1057:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1058:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATtiny24__) \
1059:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny24A__) \
1060:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny44__) \
1061:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny44A__) \
1062:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny84__) \
1063:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny84A__) \
1064:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny25__) \
1065:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny45__) \
1066:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny85__) \
1067:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny261__) \
1068:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny261A__) \
1069:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny461__) \
1070:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny461A__) \
1071:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny861__) \
1072:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny861A__) \
1073:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny43U__)
1074:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1075:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1076:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1077:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1078:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1079:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1080:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1081:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1082:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1083:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1084:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* Universal Serial Interface */
1085:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
1086:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
1087:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1088:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
1089:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
1090:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1091:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1092:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega1284P__)
1093:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1094:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1095:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1096:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
GAS LISTING /tmp/ccGIF4s8.s 			page 59


1097:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1098:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1099:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1100:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1101:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1102:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1103:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1104:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1105:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1106:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1107:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1108:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1109:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1110:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1111:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1112:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1113:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1114:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1115:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1116:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1117:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1118:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1119:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
1120:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
1121:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1122:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable() \
1123:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
1124:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1125:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~(1<<PRTIM3); \
1126:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
1127:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1128:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable() \
1129:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
1130:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1131:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)(1<<PRTIM3); \
1132:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
1133:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1134:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1135:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega32HVB__) \
1136:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32HVBREVB__) \
1137:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16HVB__) \
1138:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16HVBREVB__)
1139:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1140:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1141:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1142:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1143:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1144:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1145:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1146:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1147:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1148:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1149:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1150:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /* Voltage ADC */
1151:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
1152:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
1153:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
GAS LISTING /tmp/ccGIF4s8.s 			page 60


1154:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1155:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1156:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1157:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_vrm_enable()      (PRR0 &= (uint8_t)~(1 << PRVRM))
1158:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_vrm_disable()     (PRR0 |= (uint8_t)(1 << PRVRM))
1159:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1160:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|
1161:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|(
1162:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1163:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1164:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATmega16M1__) \
1165:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32C1__) \
1166:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32M1__) \
1167:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega64C1__) \
1168:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega64M1__)
1169:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1170:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1171:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1172:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1173:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
1174:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
1175:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1176:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1177:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1178:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1179:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1180:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1181:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1182:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1183:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1184:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1185:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc_enable()      (PRR &= (uint8_t)~(1 << PRPSC))
1186:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_psc_disable()     (PRR |= (uint8_t)(1 << PRPSC))
1187:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1188:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_can_enable()      (PRR &= (uint8_t)~(1 << PRCAN))
1189:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_can_disable()     (PRR |= (uint8_t)(1 << PRCAN))
1190:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1191:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<
1192:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<<
1193:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1194:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1195:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATtiny167__) \
1196:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny87__)
1197:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1198:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1199:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1200:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1201:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1202:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
1203:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
1204:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1205:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1206:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1207:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1208:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1209:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1210:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
GAS LISTING /tmp/ccGIF4s8.s 			page 61


1211:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1212:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1213:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1214:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
1215:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
1216:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1217:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
1218:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
1219:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1220:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1221:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_AT90USB82__) \
1222:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB162__) \
1223:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega8U2__) \
1224:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16U2__) \
1225:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32U2__)
1226:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1227:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1228:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1229:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1230:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1231:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1232:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1233:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1234:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1235:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1236:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
1237:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
1238:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1239:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1240:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1241:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1242:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable() \
1243:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
1244:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
1245:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRUSB)|(1<<PRUSART1)); \
1246:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
1247:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1248:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable() \
1249:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
1250:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
1251:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRUSB)|(1<<PRUSART1)); \
1252:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
1253:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1254:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1255:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_AT90SCR100__)
1256:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1257:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1258:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1259:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1260:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1261:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1262:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1263:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1264:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1265:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1266:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1267:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
GAS LISTING /tmp/ccGIF4s8.s 			page 62


1268:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1269:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1270:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1271:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1272:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1273:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1274:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1275:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usbh_enable()     (PRR1 &= (uint8_t)~(1 << PRUSBH))
1276:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usbh_disable()    (PRR1 |= (uint8_t)(1 << PRUSBH))
1277:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1278:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
1279:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
1280:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1281:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_hsspi_enable()    (PRR1 &= (uint8_t)~(1 << PRHSSPI))
1282:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_hsspi_disable()   (PRR1 |= (uint8_t)(1 << PRHSSPI))
1283:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1284:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_sci_enable()      (PRR1 &= (uint8_t)~(1 << PRSCI))
1285:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_sci_disable()     (PRR1 |= (uint8_t)(1 << PRSCI))
1286:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1287:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_aes_enable()      (PRR1 &= (uint8_t)~(1 << PRAES))
1288:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_aes_disable()     (PRR1 |= (uint8_t)(1 << PRAES))
1289:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1290:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_kb_enable()       (PRR1 &= (uint8_t)~(1 << PRKB))
1291:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_kb_disable()      (PRR1 |= (uint8_t)(1 << PRKB))
1292:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1293:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable() \
1294:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
1295:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
1296:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
1297:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
1298:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1299:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable() \
1300:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** do{ \
1301:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
1302:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
1303:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** }while(0)
1304:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1305:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1306:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATtiny4__) \
1307:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny5__) \
1308:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny9__) \
1309:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny10__) \
1310:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny13A__) \
1311:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1312:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
1313:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
1314:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1315:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1316:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1317:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1318:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)))
1319:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)))
1320:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1321:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1322:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #elif defined(__AVR_ATtiny20__) \
1323:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny40__)
1324:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
GAS LISTING /tmp/ccGIF4s8.s 			page 63


1325:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
1326:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
1327:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1328:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1329:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1330:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1331:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1332:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1333:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1334:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_enable()   (PRR &= (uint8_t)~(1 << PRSPI))
1335:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_spi_disable()  (PRR |= (uint8_t)(1 << PRSPI))
1336:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1337:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_enable()   (PRR &= (uint8_t)~(1 << PRTWI))
1338:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_twi_disable()  (PRR |= (uint8_t)(1 << PRTWI))
1339:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1340:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1
1341:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1<
1342:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1343:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #endif
1344:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1345:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1346:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #if defined(__AVR_AT90CAN32__) \
1347:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90CAN64__) \
1348:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90CAN128__) \
1349:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM1__) \
1350:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM2__) \
1351:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM2B__) \
1352:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM3__) \
1353:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM3B__) \
1354:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM216__) \
1355:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90PWM316__) \
1356:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90SCR100__) \
1357:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB646__) \
1358:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB647__) \
1359:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB82__) \
1360:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB1286__) \
1361:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB1287__) \
1362:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_AT90USB162__) \
1363:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega1280__) \
1364:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega1281__) \
1365:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega128RFA1__) \
1366:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega1284P__) \
1367:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega162__) \
1368:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega164A__) \
1369:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega164P__) \
1370:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega165__) \
1371:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega165A__) \
1372:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega165P__) \
1373:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega168__) \
1374:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega168P__) \
1375:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169__) \
1376:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169A__) \
1377:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169P__) \
1378:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega169PA__) \
1379:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16U4__) \
1380:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega2560__) \
1381:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega2561__) \
GAS LISTING /tmp/ccGIF4s8.s 			page 64


1382:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega324A__) \
1383:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega324P__) \
1384:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega325__) \
1385:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega325A__) \
1386:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3250__) \
1387:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3250A__) \
1388:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega328P__) \
1389:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329__) \
1390:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329A__) \
1391:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329P__) \
1392:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega329PA__) \
1393:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3290__) \
1394:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega3290A__) \
1395:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32C1__) \
1396:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32HVB__) \
1397:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32HVBREVB__) \
1398:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16HVB__) \
1399:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega16HVBREVB__) \
1400:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32M1__) \
1401:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32U2__) \
1402:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32U4__) \
1403:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega32U6__) \
1404:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega48__) \
1405:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega48P__) \
1406:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega640__) \
1407:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega649P__) \
1408:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644__) \
1409:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644A__) \
1410:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644P__) \
1411:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega644PA__) \
1412:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega645__) \
1413:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega645A__) \
1414:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega645P__) \
1415:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6450__) \
1416:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6450A__) \
1417:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6450P__) \
1418:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega649__) \
1419:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega649A__) \
1420:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6490__) \
1421:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6490A__) \
1422:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega6490P__) \
1423:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega88__) \
1424:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATmega88P__) \
1425:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny48__) \
1426:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__AVR_ATtiny167__) \
1427:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** || defined(__DOXYGEN__)
1428:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1429:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1430:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /** \addtogroup avr_power
1431:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1432:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** Some of the newer AVRs contain a System Clock Prescale Register (CLKPR) that
1433:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** allows you to decrease the system clock frequency and the power consumption
1434:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** when the need for processing power is low. Below are two macros and an
1435:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** enumerated type that can be used to interface to the Clock Prescale Register.
1436:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1437:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** \note Not all AVR devices have a Clock Prescale Register. On those devices
1438:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** without a Clock Prescale Register, these macros are not available.
GAS LISTING /tmp/ccGIF4s8.s 			page 65


1439:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** */
1440:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1441:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1442:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /** \addtogroup avr_power
1443:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** \code 
1444:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** typedef enum
1445:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** {
1446:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_1 = 0,
1447:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_2 = 1,
1448:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_4 = 2,
1449:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_8 = 3,
1450:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_16 = 4,
1451:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_32 = 5,
1452:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_64 = 6,
1453:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_128 = 7,
1454:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_256 = 8,
1455:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_1_rc = 15, // ATmega128RFA1 only
1456:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** } clock_div_t;
1457:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** \endcode
1458:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** Clock prescaler setting enumerations.
1459:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1460:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** */
1461:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** typedef enum
1462:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** {
1463:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_1 = 0,
1464:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_2 = 1,
1465:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_4 = 2,
1466:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_8 = 3,
1467:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_16 = 4,
1468:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_32 = 5,
1469:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_64 = 6,
1470:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_128 = 7,
1471:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     clock_div_256 = 8
1472:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #if defined(__AVR_ATmega128RFA1__)
1473:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     , clock_div_1_rc = 15
1474:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** #endif
1475:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** } clock_div_t;
1476:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1477:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1478:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** static __inline__ void clock_prescale_set(clock_div_t) __attribute__((__always_inline__));
1479:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1480:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** /** \addtogroup avr_power
1481:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** \code clock_prescale_set(x) \endcode
1482:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1483:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** Set the clock prescaler register select bits, selecting a system clock
1484:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** division setting. This function is inlined, even if compiler
1485:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** optimizations are disabled.
1486:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** 
1487:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** The type of x is clock_div_t.
1488:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** */
1489:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** void clock_prescale_set(clock_div_t __x)
1490:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h **** {
1491:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     uint8_t __tmp = _BV(CLKPCE);
1492:/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h ****     __asm__ __volatile__ (
 1555               		.stabn	68,0,1492,.LM159-.LFBB36
 1556               	.LM159:
 1557 04ae 91E0      		ldi r25,lo8(1)
GAS LISTING /tmp/ccGIF4s8.s 			page 66


 1558 04b0 80E8      		ldi r24,lo8(-128)
 1559               	/* #APP */
 1560               	 ;  1492 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/power.h" 1
 1561 04b2 0FB6      		in __tmp_reg__,__SREG__
 1562 04b4 F894      		cli
 1563 04b6 8093 6100 		sts 97, r24
 1564 04ba 9093 6100 		sts 97, r25
 1565 04be 0FBE      		out __SREG__, __tmp_reg__
 1566               	 ;  0 "" 2
 1567               	/* #NOAPP */
 1568               	.LBE9:
 1569               	.LBE8:
 1570               		.stabs	"main.c",132,0,0,.Ltext2
 1571               	.Ltext2:
 170:main.c        ****   USART_debug_init();
 1572               		.stabn	68,0,170,.LM160-.LFBB36
 1573               	.LM160:
 1574 04c0 0E94 0000 		call USART_debug_init
 175:main.c        ****   debug_init();
 1575               		.stabn	68,0,175,.LM161-.LFBB36
 1576               	.LM161:
 1577 04c4 0E94 0000 		call debug_init
 180:main.c        ****   ADC_Init();
 1578               		.stabn	68,0,180,.LM162-.LFBB36
 1579               	.LM162:
 1580 04c8 0E94 0000 		call ADC_Init
 185:main.c        ****   USART_bluetooth_init();
 1581               		.stabn	68,0,185,.LM163-.LFBB36
 1582               	.LM163:
 1583 04cc 0E94 0000 		call USART_bluetooth_init
 190:main.c        ****   sei();
 1584               		.stabn	68,0,190,.LM164-.LFBB36
 1585               	.LM164:
 1586               	/* #APP */
 1587               	 ;  190 "main.c" 1
 1588 04d0 7894      		sei
 1589               	 ;  0 "" 2
 208:main.c        ****   USART_bluetooth_send_message("AT+ENQ");
 1590               		.stabn	68,0,208,.LM165-.LFBB36
 1591               	.LM165:
 1592               	/* #NOAPP */
 1593 04d2 80E0      		ldi r24,lo8(.LC1)
 1594 04d4 90E0      		ldi r25,hi8(.LC1)
 1595 04d6 0E94 0000 		call USART_bluetooth_send_message
 1596               	.L52:
 1597 04da 00C0      		rjmp .L52
 1598               		.size	main, .-main
 1599               	.Lscope36:
 1600               		.stabs	"",36,0,0,.Lscope36-.LFBB36
 1601               		.stabd	78,0,0
 1602               		.stabs	"debug_interrupt:F(0,15)",36,0,613,debug_interrupt
 1603               	.global	debug_interrupt
 1604               		.type	debug_interrupt, @function
 1605               	debug_interrupt:
 1606               		.stabd	46,0,0
 609:main.c        **** 
 610:main.c        **** /**
GAS LISTING /tmp/ccGIF4s8.s 			page 67


 611:main.c        **** * Makes debug pin `interrupt`
 612:main.c        **** **/
 613:main.c        **** void debug_interrupt() {
 1607               		.stabn	68,0,613,.LM166-.LFBB37
 1608               	.LM166:
 1609               	.LFBB37:
 1610               	/* prologue: function */
 1611               	/* frame size = 0 */
 1612               	/* stack size = 0 */
 1613               	.L__stack_usage = 0
 614:main.c        ****   b_output_low( DEBUG_INTERRUPT_PIN );
 1614               		.stabn	68,0,614,.LM167-.LFBB37
 1615               	.LM167:
 1616 04dc 81E0      		ldi r24,lo8(1)
 1617 04de 0E94 0000 		call b_output_low
 615:main.c        ****   b_output_high( DEBUG_INTERRUPT_PIN );
 1618               		.stabn	68,0,615,.LM168-.LFBB37
 1619               	.LM168:
 1620 04e2 81E0      		ldi r24,lo8(1)
 1621 04e4 0E94 0000 		call b_output_high
 616:main.c        ****   delay_ms(10);
 1622               		.stabn	68,0,616,.LM169-.LFBB37
 1623               	.LM169:
 1624 04e8 8AE0      		ldi r24,lo8(10)
 1625 04ea 0E94 0000 		call delay_ms
 617:main.c        ****   b_output_low( DEBUG_INTERRUPT_PIN );
 1626               		.stabn	68,0,617,.LM170-.LFBB37
 1627               	.LM170:
 1628 04ee 81E0      		ldi r24,lo8(1)
 1629 04f0 0E94 0000 		call b_output_low
 1630               	/* epilogue start */
 618:main.c        **** }
 1631               		.stabn	68,0,618,.LM171-.LFBB37
 1632               	.LM171:
 1633 04f4 0895      		ret
 1634               		.size	debug_interrupt, .-debug_interrupt
 1635               	.Lscope37:
 1636               		.stabs	"",36,0,0,.Lscope37-.LFBB37
 1637               		.stabd	78,0,0
 1638               		.stabs	"debug_click:F(0,15)",36,0,624,debug_click
 1639               	.global	debug_click
 1640               		.type	debug_click, @function
 1641               	debug_click:
 1642               		.stabd	46,0,0
 619:main.c        **** 
 620:main.c        **** /**
 621:main.c        **** * Sets the debug pin to low - high - low
 622:main.c        **** * Indication of the step was passed
 623:main.c        **** **/
 624:main.c        **** void debug_click() {
 1643               		.stabn	68,0,624,.LM172-.LFBB38
 1644               	.LM172:
 1645               	.LFBB38:
 1646               	/* prologue: function */
 1647               	/* frame size = 0 */
 1648               	/* stack size = 0 */
 1649               	.L__stack_usage = 0
GAS LISTING /tmp/ccGIF4s8.s 			page 68


 625:main.c        ****   b_output_low( DEBUG_OUTPUT_PIN );
 1650               		.stabn	68,0,625,.LM173-.LFBB38
 1651               	.LM173:
 1652 04f6 80E0      		ldi r24,lo8(0)
 1653 04f8 0E94 0000 		call b_output_low
 626:main.c        ****   b_output_high( DEBUG_OUTPUT_PIN );
 1654               		.stabn	68,0,626,.LM174-.LFBB38
 1655               	.LM174:
 1656 04fc 80E0      		ldi r24,lo8(0)
 1657 04fe 0E94 0000 		call b_output_high
 1658               	/* epilogue start */
 627:main.c        **** }
 1659               		.stabn	68,0,627,.LM175-.LFBB38
 1660               	.LM175:
 1661 0502 0895      		ret
 1662               		.size	debug_click, .-debug_click
 1663               	.Lscope38:
 1664               		.stabs	"",36,0,0,.Lscope38-.LFBB38
 1665               		.stabd	78,0,0
 1666               		.stabs	"debug_data:F(0,15)",36,0,632,debug_data
 1667               		.stabs	"data:P(9,2)",64,0,632,15
 1668               	.global	debug_data
 1669               		.type	debug_data, @function
 1670               	debug_data:
 1671               		.stabd	46,0,0
 628:main.c        **** 
 629:main.c        **** /**
 630:main.c        **** * Debug data, coming from the ADC
 631:main.c        **** **/
 632:main.c        **** void debug_data( uint8_t data ) {
 1672               		.stabn	68,0,632,.LM176-.LFBB39
 1673               	.LM176:
 1674               	.LFBB39:
 1675 0504 FF92      		push r15
 1676 0506 0F93      		push r16
 1677 0508 1F93      		push r17
 1678 050a CF93      		push r28
 1679 050c DF93      		push r29
 1680               	/* prologue: function */
 1681               	/* frame size = 0 */
 1682               	/* stack size = 5 */
 1683               	.L__stack_usage = 5
 1684 050e F82E      		mov r15,r24
 1685               		.stabn	68,0,632,.LM177-.LFBB39
 1686               	.LM177:
 1687 0510 C0E0      		ldi r28,lo8(0)
 1688 0512 D0E0      		ldi r29,hi8(0)
 633:main.c        ****   
 634:main.c        ****   /* Mask */
 635:main.c        ****   int8_t mask = 0;
 636:main.c        ****   /* Masked data */
 637:main.c        ****   int8_t masked_data = 0;
 638:main.c        ****   /* Loop variable */
 639:main.c        ****   uint8_t i = 0;
 640:main.c        **** 
 641:main.c        ****   for (i=0; i < 8; i++) {
 642:main.c        ****     mask = 1 << i;
GAS LISTING /tmp/ccGIF4s8.s 			page 69


 1689               		.stabn	68,0,642,.LM178-.LFBB39
 1690               	.LM178:
 1691 0514 01E0      		ldi r16,lo8(1)
 1692 0516 10E0      		ldi r17,hi8(1)
 1693               	.L58:
 1694 0518 9801      		movw r18,r16
 1695 051a 0C2E      		mov r0,r28
 1696 051c 00C0      		rjmp 2f
 1697 051e 220F      	1:	lsl r18
 1698 0520 331F      		rol r19
 1699 0522 0A94      	2:	dec r0
 1700 0524 02F4      		brpl 1b
 643:main.c        ****     masked_data = data & mask;
 1701               		.stabn	68,0,643,.LM179-.LFBB39
 1702               	.LM179:
 1703 0526 2F21      		and r18,r15
 644:main.c        ****     if (masked_data >> i == 1) {
 1704               		.stabn	68,0,644,.LM180-.LFBB39
 1705               	.LM180:
 1706 0528 3327      		clr r19
 1707 052a 27FD      		sbrc r18,7
 1708 052c 3095      		com r19
 1709 052e 0C2E      		mov r0,r28
 1710 0530 00C0      		rjmp 2f
 1711 0532 3595      	1:	asr r19
 1712 0534 2795      		ror r18
 1713 0536 0A94      	2:	dec r0
 1714 0538 02F4      		brpl 1b
 1715 053a 2130      		cpi r18,1
 1716 053c 3105      		cpc r19,__zero_reg__
 1717 053e 01F4      		brne .L56
 645:main.c        ****       b_output_high( DEBUG_DATA_PIN );
 1718               		.stabn	68,0,645,.LM181-.LFBB39
 1719               	.LM181:
 1720 0540 84E0      		ldi r24,lo8(4)
 1721 0542 0E94 0000 		call b_output_high
 1722 0546 00C0      		rjmp .L57
 1723               	.L56:
 646:main.c        ****     } else {
 647:main.c        ****       b_output_low( DEBUG_DATA_PIN );
 1724               		.stabn	68,0,647,.LM182-.LFBB39
 1725               	.LM182:
 1726 0548 84E0      		ldi r24,lo8(4)
 1727 054a 0E94 0000 		call b_output_low
 1728               	.L57:
 648:main.c        ****     }
 649:main.c        ****     delay_ms(100);
 1729               		.stabn	68,0,649,.LM183-.LFBB39
 1730               	.LM183:
 1731 054e 84E6      		ldi r24,lo8(100)
 1732 0550 0E94 0000 		call delay_ms
 650:main.c        ****     b_output_low( DEBUG_DATA_PIN );
 1733               		.stabn	68,0,650,.LM184-.LFBB39
 1734               	.LM184:
 1735 0554 84E0      		ldi r24,lo8(4)
 1736 0556 0E94 0000 		call b_output_low
 651:main.c        ****     delay_ms(100);
GAS LISTING /tmp/ccGIF4s8.s 			page 70


 1737               		.stabn	68,0,651,.LM185-.LFBB39
 1738               	.LM185:
 1739 055a 84E6      		ldi r24,lo8(100)
 1740 055c 0E94 0000 		call delay_ms
 1741 0560 2196      		adiw r28,1
 641:main.c        ****   for (i=0; i < 8; i++) {
 1742               		.stabn	68,0,641,.LM186-.LFBB39
 1743               	.LM186:
 1744 0562 C830      		cpi r28,8
 1745 0564 D105      		cpc r29,__zero_reg__
 1746 0566 01F4      		brne .L58
 652:main.c        ****   }
 653:main.c        **** 
 654:main.c        ****   b_output_low( DEBUG_DATA_PIN );
 1747               		.stabn	68,0,654,.LM187-.LFBB39
 1748               	.LM187:
 1749 0568 84E0      		ldi r24,lo8(4)
 1750 056a 0E94 0000 		call b_output_low
 655:main.c        ****   delay_ms(100);
 1751               		.stabn	68,0,655,.LM188-.LFBB39
 1752               	.LM188:
 1753 056e 84E6      		ldi r24,lo8(100)
 1754 0570 0E94 0000 		call delay_ms
 656:main.c        ****   b_output_high( DEBUG_DATA_PIN );
 1755               		.stabn	68,0,656,.LM189-.LFBB39
 1756               	.LM189:
 1757 0574 84E0      		ldi r24,lo8(4)
 1758 0576 0E94 0000 		call b_output_high
 657:main.c        ****   delay_ms(100);
 1759               		.stabn	68,0,657,.LM190-.LFBB39
 1760               	.LM190:
 1761 057a 84E6      		ldi r24,lo8(100)
 1762 057c 0E94 0000 		call delay_ms
 658:main.c        ****   b_output_low( DEBUG_DATA_PIN );
 1763               		.stabn	68,0,658,.LM191-.LFBB39
 1764               	.LM191:
 1765 0580 84E0      		ldi r24,lo8(4)
 1766 0582 0E94 0000 		call b_output_low
 1767               	/* epilogue start */
 659:main.c        **** }
 1768               		.stabn	68,0,659,.LM192-.LFBB39
 1769               	.LM192:
 1770 0586 DF91      		pop r29
 1771 0588 CF91      		pop r28
 1772 058a 1F91      		pop r17
 1773 058c 0F91      		pop r16
 1774 058e FF90      		pop r15
 1775 0590 0895      		ret
 1776               		.size	debug_data, .-debug_data
 1777               	.Lscope39:
 1778               		.stabs	"",36,0,0,.Lscope39-.LFBB39
 1779               		.stabd	78,0,0
 1780               		.stabs	"append:F(0,16)",36,0,664,append
 1781               		.stabs	"s:P(0,2)",64,0,664,11
 1782               	.global	append
 1783               		.type	append, @function
 1784               	append:
GAS LISTING /tmp/ccGIF4s8.s 			page 71


 1785               		.stabd	46,0,0
 660:main.c        **** 
 661:main.c        **** /**
 662:main.c        **** * Append the character to the `string`
 663:main.c        **** **/
 664:main.c        **** char *append(const char *o, char s) {
 1786               		.stabn	68,0,664,.LM193-.LFBB40
 1787               	.LM193:
 1788               	.LFBB40:
 1789 0592 BF92      		push r11
 1790 0594 CF92      		push r12
 1791 0596 DF92      		push r13
 1792 0598 EF92      		push r14
 1793 059a FF92      		push r15
 1794 059c 0F93      		push r16
 1795 059e 1F93      		push r17
 1796 05a0 DF93      		push r29
 1797 05a2 CF93      		push r28
 1798 05a4 CDB7      		in r28,__SP_L__
 1799 05a6 DEB7      		in r29,__SP_H__
 1800               	/* prologue: function */
 1801               	/* frame size = 0 */
 1802               	/* stack size = 9 */
 1803               	.L__stack_usage = 9
 1804 05a8 482F      		mov r20,r24
 1805 05aa 792F      		mov r23,r25
 1806 05ac B62E      		mov r11,r22
 665:main.c        ****   /* Get the length */
 666:main.c        ****   int len = strlen(o);
 667:main.c        ****   /* Create new buffer +2 spaces */
 668:main.c        ****   char buf[len+2];
 669:main.c        ****   /* Copy the original read-only `string` */
 670:main.c        ****   strcpy(buf, o);
 671:main.c        ****   /* Append the character */
 672:main.c        ****   buf[len] = s;
 673:main.c        ****   /* Add the end to the character */
 674:main.c        ****   buf[len+1] = 0;
 675:main.c        ****   /* Return the constructed character */
 676:main.c        ****   return strdup(buf);
 677:main.c        **** 
 678:main.c        **** }
 1807               		.stabn	68,0,678,.LM194-.LFBB40
 1808               	.LM194:
 1809 05ae CDB6      		in r12,__SP_L__
 1810 05b0 DEB6      		in r13,__SP_H__
 666:main.c        ****   int len = strlen(o);
 1811               		.stabn	68,0,666,.LM195-.LFBB40
 1812               	.LM195:
 1813 05b2 E82F      		mov r30,r24
 1814 05b4 F92F      		mov r31,r25
 1815 05b6 DF01      		movw r26,r30
 1816 05b8 0D90      		ld __tmp_reg__,X+
 1817 05ba 0020      		tst __tmp_reg__
 1818 05bc 01F4      		brne .-6
 1819 05be 8D01      		movw r16,r26
 1820 05c0 0150      		subi r16,lo8(-(-1))
 1821 05c2 1040      		sbci r17,hi8(-(-1))
GAS LISTING /tmp/ccGIF4s8.s 			page 72


 1822 05c4 0E1B      		sub r16,r30
 1823 05c6 1F0B      		sbc r17,r31
 668:main.c        ****   char buf[len+2];
 1824               		.stabn	68,0,668,.LM196-.LFBB40
 1825               	.LM196:
 1826 05c8 9801      		movw r18,r16
 1827 05ca 2E5F      		subi r18,lo8(-(2))
 1828 05cc 3F4F      		sbci r19,hi8(-(2))
 1829 05ce 8DB7      		in r24,__SP_L__
 1830 05d0 9EB7      		in r25,__SP_H__
 1831 05d2 821B      		sub r24,r18
 1832 05d4 930B      		sbc r25,r19
 1833 05d6 0FB6      		in __tmp_reg__,__SREG__
 1834 05d8 F894      		cli
 1835 05da 9EBF      		out __SP_H__,r25
 1836 05dc 0FBE      		out __SREG__,__tmp_reg__
 1837 05de 8DBF      		out __SP_L__,r24
 1838 05e0 EDB6      		in r14,__SP_L__
 1839 05e2 FEB6      		in r15,__SP_H__
 1840 05e4 0894      		sec
 1841 05e6 E11C      		adc r14,__zero_reg__
 1842 05e8 F11C      		adc r15,__zero_reg__
 670:main.c        ****   strcpy(buf, o);
 1843               		.stabn	68,0,670,.LM197-.LFBB40
 1844               	.LM197:
 1845 05ea C701      		movw r24,r14
 1846 05ec 642F      		mov r22,r20
 1847 05ee 0E94 0000 		call strcpy
 672:main.c        ****   buf[len] = s;
 1848               		.stabn	68,0,672,.LM198-.LFBB40
 1849               	.LM198:
 1850 05f2 F701      		movw r30,r14
 1851 05f4 E00F      		add r30,r16
 1852 05f6 F11F      		adc r31,r17
 1853 05f8 B082      		st Z,r11
 674:main.c        ****   buf[len+1] = 0;
 1854               		.stabn	68,0,674,.LM199-.LFBB40
 1855               	.LM199:
 1856 05fa 1182      		std Z+1,__zero_reg__
 676:main.c        ****   return strdup(buf);
 1857               		.stabn	68,0,676,.LM200-.LFBB40
 1858               	.LM200:
 1859 05fc C701      		movw r24,r14
 1860 05fe 0E94 0000 		call strdup
 1861               		.stabn	68,0,678,.LM201-.LFBB40
 1862               	.LM201:
 1863 0602 0FB6      		in __tmp_reg__,__SREG__
 1864 0604 F894      		cli
 1865 0606 DEBE      		out __SP_H__,r13
 1866 0608 0FBE      		out __SREG__,__tmp_reg__
 1867 060a CDBE      		out __SP_L__,r12
 1868               	/* epilogue start */
 1869 060c CF91      		pop r28
 1870 060e DF91      		pop r29
 1871 0610 1F91      		pop r17
 1872 0612 0F91      		pop r16
 1873 0614 FF90      		pop r15
GAS LISTING /tmp/ccGIF4s8.s 			page 73


 1874 0616 EF90      		pop r14
 1875 0618 DF90      		pop r13
 1876 061a CF90      		pop r12
 1877 061c BF90      		pop r11
 1878 061e 0895      		ret
 1879               		.size	append, .-append
 1880               	.Lscope40:
 1881               		.stabs	"",36,0,0,.Lscope40-.LFBB40
 1882               		.stabd	78,0,0
 1883               		.data
 1884               	.LC2:
 1885 000e 4154 2B52 		.string	"AT+RESP"
 1885      4553 5000 
 1886               		.text
 1887               		.stabs	"USART_bluetooth_at_response:F(0,15)",36,0,451,USART_bluetooth_at_response
 1888               		.stabs	"option:P(0,2)",64,0,451,22
 1889               	.global	USART_bluetooth_at_response
 1890               		.type	USART_bluetooth_at_response, @function
 1891               	USART_bluetooth_at_response:
 1892               		.stabd	46,0,0
 451:main.c        **** void USART_bluetooth_at_response(char option) {
 1893               		.stabn	68,0,451,.LM202-.LFBB41
 1894               	.LM202:
 1895               	.LFBB41:
 1896 0620 CF93      		push r28
 1897 0622 DF93      		push r29
 1898               	/* prologue: function */
 1899               	/* frame size = 0 */
 1900               	/* stack size = 2 */
 1901               	.L__stack_usage = 2
 1902 0624 682F      		mov r22,r24
 454:main.c        ****   if (option == '+' || option == '-') {
 1903               		.stabn	68,0,454,.LM203-.LFBB41
 1904               	.LM203:
 1905 0626 8B32      		cpi r24,lo8(43)
 1906 0628 01F0      		breq .L62
 454:main.c        ****   if (option == '+' || option == '-') {
 1907               		.stabn	68,0,454,.LM204-.LFBB41
 1908               	.LM204:
 1909 062a 8D32      		cpi r24,lo8(45)
 1910 062c 01F4      		brne .L61
 1911               	.L62:
 455:main.c        ****     message = append("AT+RESP", option);
 1912               		.stabn	68,0,455,.LM205-.LFBB41
 1913               	.LM205:
 1914 062e 80E0      		ldi r24,lo8(.LC2)
 1915 0630 90E0      		ldi r25,hi8(.LC2)
 1916 0632 0E94 0000 		call append
 1917 0636 EC01      		movw r28,r24
 456:main.c        ****     USART_bluetooth_send_message(message);
 1918               		.stabn	68,0,456,.LM206-.LFBB41
 1919               	.LM206:
 1920 0638 0E94 0000 		call USART_bluetooth_send_message
 457:main.c        ****     free(message);
 1921               		.stabn	68,0,457,.LM207-.LFBB41
 1922               	.LM207:
 1923 063c CE01      		movw r24,r28
GAS LISTING /tmp/ccGIF4s8.s 			page 74


 1924 063e 0E94 0000 		call free
 1925               	.L61:
 1926               	/* epilogue start */
 459:main.c        **** }
 1927               		.stabn	68,0,459,.LM208-.LFBB41
 1928               	.LM208:
 1929 0642 DF91      		pop r29
 1930 0644 CF91      		pop r28
 1931 0646 0895      		ret
 1932               		.size	USART_bluetooth_at_response, .-USART_bluetooth_at_response
 1933               		.stabs	"message:r(0,16)",64,0,452,28
 1934               		.stabn	192,0,0,.LFBB41-.LFBB41
 1935               		.stabn	224,0,0,.Lscope41-.LFBB41
 1936               	.Lscope41:
 1937               		.stabs	"",36,0,0,.Lscope41-.LFBB41
 1938               		.stabd	78,0,0
 1939               		.data
 1940               	.LC3:
 1941 0016 4154 2B44 		.string	"AT+DCOV"
 1941      434F 5600 
 1942               		.text
 1943               		.stabs	"USART_bluetooth_at_discover:F(0,15)",36,0,435,USART_bluetooth_at_discover
 1944               		.stabs	"option:P(0,2)",64,0,435,22
 1945               	.global	USART_bluetooth_at_discover
 1946               		.type	USART_bluetooth_at_discover, @function
 1947               	USART_bluetooth_at_discover:
 1948               		.stabd	46,0,0
 435:main.c        **** void USART_bluetooth_at_discover(char option) {
 1949               		.stabn	68,0,435,.LM209-.LFBB42
 1950               	.LM209:
 1951               	.LFBB42:
 1952 0648 CF93      		push r28
 1953 064a DF93      		push r29
 1954               	/* prologue: function */
 1955               	/* frame size = 0 */
 1956               	/* stack size = 2 */
 1957               	.L__stack_usage = 2
 1958 064c 682F      		mov r22,r24
 438:main.c        ****   if (option == '+' || option == '-') {
 1959               		.stabn	68,0,438,.LM210-.LFBB42
 1960               	.LM210:
 1961 064e 8B32      		cpi r24,lo8(43)
 1962 0650 01F0      		breq .L65
 438:main.c        ****   if (option == '+' || option == '-') {
 1963               		.stabn	68,0,438,.LM211-.LFBB42
 1964               	.LM211:
 1965 0652 8D32      		cpi r24,lo8(45)
 1966 0654 01F4      		brne .L64
 1967               	.L65:
 439:main.c        ****     message = append("AT+DCOV", option);
 1968               		.stabn	68,0,439,.LM212-.LFBB42
 1969               	.LM212:
 1970 0656 80E0      		ldi r24,lo8(.LC3)
 1971 0658 90E0      		ldi r25,hi8(.LC3)
 1972 065a 0E94 0000 		call append
 1973 065e EC01      		movw r28,r24
 440:main.c        ****     USART_bluetooth_send_message(message);
GAS LISTING /tmp/ccGIF4s8.s 			page 75


 1974               		.stabn	68,0,440,.LM213-.LFBB42
 1975               	.LM213:
 1976 0660 0E94 0000 		call USART_bluetooth_send_message
 441:main.c        ****     free(message);
 1977               		.stabn	68,0,441,.LM214-.LFBB42
 1978               	.LM214:
 1979 0664 CE01      		movw r24,r28
 1980 0666 0E94 0000 		call free
 1981               	.L64:
 1982               	/* epilogue start */
 443:main.c        **** }
 1983               		.stabn	68,0,443,.LM215-.LFBB42
 1984               	.LM215:
 1985 066a DF91      		pop r29
 1986 066c CF91      		pop r28
 1987 066e 0895      		ret
 1988               		.size	USART_bluetooth_at_discover, .-USART_bluetooth_at_discover
 1989               		.stabs	"message:r(0,16)",64,0,436,28
 1990               		.stabn	192,0,0,.LFBB42-.LFBB42
 1991               		.stabn	224,0,0,.Lscope42-.LFBB42
 1992               	.Lscope42:
 1993               		.stabs	"",36,0,0,.Lscope42-.LFBB42
 1994               		.stabd	78,0,0
 1995               		.data
 1996               	.LC4:
 1997 001e 4154 2B45 		.string	"AT+ECHO"
 1997      4348 4F00 
 1998               		.text
 1999               		.stabs	"USART_bluetooth_at_echo:F(0,15)",36,0,419,USART_bluetooth_at_echo
 2000               		.stabs	"option:P(0,2)",64,0,419,22
 2001               	.global	USART_bluetooth_at_echo
 2002               		.type	USART_bluetooth_at_echo, @function
 2003               	USART_bluetooth_at_echo:
 2004               		.stabd	46,0,0
 419:main.c        **** void USART_bluetooth_at_echo(char option) {
 2005               		.stabn	68,0,419,.LM216-.LFBB43
 2006               	.LM216:
 2007               	.LFBB43:
 2008 0670 CF93      		push r28
 2009 0672 DF93      		push r29
 2010               	/* prologue: function */
 2011               	/* frame size = 0 */
 2012               	/* stack size = 2 */
 2013               	.L__stack_usage = 2
 2014 0674 682F      		mov r22,r24
 422:main.c        ****   if (option == '+' || option == '-') {
 2015               		.stabn	68,0,422,.LM217-.LFBB43
 2016               	.LM217:
 2017 0676 8B32      		cpi r24,lo8(43)
 2018 0678 01F0      		breq .L68
 422:main.c        ****   if (option == '+' || option == '-') {
 2019               		.stabn	68,0,422,.LM218-.LFBB43
 2020               	.LM218:
 2021 067a 8D32      		cpi r24,lo8(45)
 2022 067c 01F4      		brne .L67
 2023               	.L68:
 423:main.c        ****     message = append("AT+ECHO", option);
GAS LISTING /tmp/ccGIF4s8.s 			page 76


 2024               		.stabn	68,0,423,.LM219-.LFBB43
 2025               	.LM219:
 2026 067e 80E0      		ldi r24,lo8(.LC4)
 2027 0680 90E0      		ldi r25,hi8(.LC4)
 2028 0682 0E94 0000 		call append
 2029 0686 EC01      		movw r28,r24
 424:main.c        ****     USART_bluetooth_send_message(message);
 2030               		.stabn	68,0,424,.LM220-.LFBB43
 2031               	.LM220:
 2032 0688 0E94 0000 		call USART_bluetooth_send_message
 425:main.c        ****     free(message);
 2033               		.stabn	68,0,425,.LM221-.LFBB43
 2034               	.LM221:
 2035 068c CE01      		movw r24,r28
 2036 068e 0E94 0000 		call free
 2037               	.L67:
 2038               	/* epilogue start */
 427:main.c        **** }
 2039               		.stabn	68,0,427,.LM222-.LFBB43
 2040               	.LM222:
 2041 0692 DF91      		pop r29
 2042 0694 CF91      		pop r28
 2043 0696 0895      		ret
 2044               		.size	USART_bluetooth_at_echo, .-USART_bluetooth_at_echo
 2045               		.stabs	"message:r(0,16)",64,0,420,28
 2046               		.stabn	192,0,0,.LFBB43-.LFBB43
 2047               		.stabn	224,0,0,.Lscope43-.LFBB43
 2048               	.Lscope43:
 2049               		.stabs	"",36,0,0,.Lscope43-.LFBB43
 2050               		.stabd	78,0,0
 2051               	.global	states
 2052               		.data
 2053               		.type	states, @object
 2054               		.size	states, 12
 2055               	states:
 2056 0026 0100      		.word	1
 2057 0028 0200      		.word	2
 2058 002a 0300      		.word	3
 2059 002c 0400      		.word	4
 2060 002e 0500      		.word	5
 2061 0030 0600      		.word	6
 2062               	.global	state
 2063               	.global	state
 2064               		.section .bss
 2065               		.type	state, @object
 2066               		.size	state, 2
 2067               	state:
 2068 0000 0000      		.skip 2,0
 2069               		.comm buffer_bluetooth,25,1
 2070               		.comm buffer_i,1,1
 2071               		.comm recv_byte,1,1
 2072               		.stabs	"buffer_bluetooth:G(0,18)=ar(0,19)=r(0,19);0;0177777;;0;24;(0,2)",32,0,140,0
 2073               		.stabs	"buffer_i:G(9,2)",32,0,142,0
 2074               		.stabs	"recv_byte:G(0,11)",32,0,144,0
 2075               		.stabs	"states:G(0,20)=ar(0,19);0;5;(0,1)",32,0,146,0
 2076               		.stabs	"state:G(0,1)",32,0,156,0
 2077               		.text
GAS LISTING /tmp/ccGIF4s8.s 			page 77


 2078               		.stabs	"",100,0,0,.Letext0
 2079               	.Letext0:
 2080               	.global __do_copy_data
 2081               	.global __do_clear_bss
GAS LISTING /tmp/ccGIF4s8.s 			page 78


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccGIF4s8.s:2      *ABS*:000000000000003f __SREG__
     /tmp/ccGIF4s8.s:3      *ABS*:000000000000003e __SP_H__
     /tmp/ccGIF4s8.s:4      *ABS*:000000000000003d __SP_L__
     /tmp/ccGIF4s8.s:5      *ABS*:0000000000000034 __CCP__
     /tmp/ccGIF4s8.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccGIF4s8.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccGIF4s8.s:92     .text:0000000000000000 a_set_input
     /tmp/ccGIF4s8.s:124    .text:0000000000000018 a_set_output
     /tmp/ccGIF4s8.s:155    .text:000000000000002e a_output_low
     /tmp/ccGIF4s8.s:187    .text:0000000000000046 a_output_high
     /tmp/ccGIF4s8.s:218    .text:000000000000005c b_set_input
     /tmp/ccGIF4s8.s:250    .text:0000000000000074 b_set_output
     /tmp/ccGIF4s8.s:281    .text:000000000000008a b_output_low
     /tmp/ccGIF4s8.s:313    .text:00000000000000a2 b_output_high
     /tmp/ccGIF4s8.s:344    .text:00000000000000b8 c_set_input
     /tmp/ccGIF4s8.s:376    .text:00000000000000d0 c_set_output
     /tmp/ccGIF4s8.s:407    .text:00000000000000e6 c_output_low
     /tmp/ccGIF4s8.s:439    .text:00000000000000fe c_output_high
     /tmp/ccGIF4s8.s:470    .text:0000000000000114 d_set_input
     /tmp/ccGIF4s8.s:502    .text:000000000000012c d_set_output
     /tmp/ccGIF4s8.s:533    .text:0000000000000142 d_output_low
     /tmp/ccGIF4s8.s:565    .text:000000000000015a d_output_high
     /tmp/ccGIF4s8.s:595    .text:0000000000000170 ADC_Init
     /tmp/ccGIF4s8.s:643    .text:0000000000000196 ADC_stop
     /tmp/ccGIF4s8.s:666    .text:000000000000019a ADC_read
     /tmp/ccGIF4s8.s:705    .text:00000000000001b8 USART_bluetooth_init
     /tmp/ccGIF4s8.s:766    .text:00000000000001e6 USART_bluetooth_send
     /tmp/ccGIF4s8.s:794    .text:00000000000001ee USART_debug_init
     /tmp/ccGIF4s8.s:841    .text:0000000000000208 USART_debug_send
     /tmp/ccGIF4s8.s:870    .text:0000000000000210 USART_bluetooth_recv
                            *COM*:0000000000000001 buffer_i
                            *COM*:0000000000000019 buffer_bluetooth
     /tmp/ccGIF4s8.s:960    .text:0000000000000276 USART_debug_send_message
     /tmp/ccGIF4s8.s:1025   .text:00000000000002ae USART_debug_recv
     /tmp/ccGIF4s8.s:1048   .text:00000000000002b4 __vector_19
                            *COM*:0000000000000001 recv_byte
     /tmp/ccGIF4s8.s:1108   .text:0000000000000302 __vector_20
     /tmp/ccGIF4s8.s:1172   .text:0000000000000350 __vector_1
     /tmp/ccGIF4s8.s:1228   .text:0000000000000398 __vector_2
     /tmp/ccGIF4s8.s:1286   .text:00000000000003e2 delay_ms
     /tmp/ccGIF4s8.s:1353   .text:000000000000041a USART_bluetooth_send_message
     /tmp/ccGIF4s8.s:1417   .text:000000000000044c USART_bluetooth_check_alive
     /tmp/ccGIF4s8.s:1442   .text:0000000000000456 ADC_start
     /tmp/ccGIF4s8.s:1494   .text:0000000000000488 debug_init
     /tmp/ccGIF4s8.s:1542   .text:00000000000004ae main
     /tmp/ccGIF4s8.s:1605   .text:00000000000004dc debug_interrupt
     /tmp/ccGIF4s8.s:1641   .text:00000000000004f6 debug_click
     /tmp/ccGIF4s8.s:1670   .text:0000000000000504 debug_data
     /tmp/ccGIF4s8.s:1784   .text:0000000000000592 append
     /tmp/ccGIF4s8.s:1891   .text:0000000000000620 USART_bluetooth_at_response
     /tmp/ccGIF4s8.s:1947   .text:0000000000000648 USART_bluetooth_at_discover
     /tmp/ccGIF4s8.s:2003   .text:0000000000000670 USART_bluetooth_at_echo
     /tmp/ccGIF4s8.s:2055   .data:0000000000000026 states
     /tmp/ccGIF4s8.s:2067   .bss:0000000000000000 state

GAS LISTING /tmp/ccGIF4s8.s 			page 79


UNDEFINED SYMBOLS
strcpy
strdup
free
__do_copy_data
__do_clear_bss
